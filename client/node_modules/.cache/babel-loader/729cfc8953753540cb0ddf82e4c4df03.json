{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDaZiqbkNS-wFDih0zU3rv0bUYC_gU8LiY\",\n  authDomain: \"langflash-db.firebaseapp.com\",\n  databaseURL: \"https://langflash-db.firebaseio.com\",\n  projectId: \"langflash-db\",\n  storageBucket: \"langflash-db.appspot.com\",\n  messagingSenderId: \"750372521965\",\n  appId: \"1:750372521965:web:1394ec28b8a0f9e00bc9e4\",\n  measurementId: \"G-JY3RHBYG3X\"\n};\nfirebase.initializeApp(config);\nexport const createUserDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  console.log(\"Friend object with uid\", userAuth);\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      email,\n      uid\n    } = userAuth;\n    const joinDate = new Date();\n    const displayName = !userAuth.displayName ? userAuth.displayName : additionalData.displayName;\n\n    try {\n      await userRef.set({\n        uid,\n        displayName,\n        email,\n        joinDate,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  } //changeCurrentUser(snapShot.data());\n\n\n  console.log(\"UserRef going out\", userRef, userRef.get(new firestore.FieldPath('activityStatus')));\n  return userRef;\n};\nexport const getInnerRef = async (user, innerAttribute) => {\n  const userRef = firestore.doc(`users/${user.uid}`);\n  return await userRef.get(innerAttribute);\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const SignInWithGoogle = () => auth.signInWithPopup(provider);\nexport const fetchReferenceObject = async referenceString => {\n  let profileData = {};\n  await firestore.doc(referenceString).get().then(document => {\n    profileData = { ...profileData,\n      data: document.data()\n    };\n  });\n  return profileData;\n};\nexport const fetchUserArray = async () => {\n  const temp = [];\n  await firestore.collection('/users').get().then(collection => {\n    collection.forEach(document => {\n      temp.push(document.data());\n    });\n  });\n  return temp;\n};\nexport const alterActiveDecks = async (id, activeDecks) => {\n  await firestore.doc(`users/${id}`).update({\n    activeDecks: activeDecks\n  });\n  return activeDecks;\n};\nexport const appendToActiveDecks = async (id, activeDecks) => {\n  await firestore.doc(`users/${id}`).update({\n    activeDecks: activeDecks\n  });\n  return activeDecks;\n};\nexport const filterActiveFriends = async friendsList => {\n  return await friendsList.filter((friend, idx) => idx < 5 && firestore.doc(friend).get().activityStatus === \"online\");\n};\nexport const appendFriend = async (id, friendsList, friend) => {\n  //caches the referenceString within friendsList at this point\n  return await firestore.doc(`users/${id}`).update({\n    friendsList: [...friendsList, friend]\n  });\n};\nexport const deleteFriend = async (id, friendsList, friend) => {\n  return await firestore.doc(`users/${id}`).update({\n    friendsList: await friendsList.filter(it => it === friend)\n  });\n};\nexport const blackListUser = async (id, blackList, user) => {\n  return await firestore.doc(`users/${id}`).update({\n    blackList: [...blackList, user]\n  });\n};\nexport const whiteListUser = async (id, blackList, user) => {\n  return await firestore.doc(`users/${id}`).update({\n    blackList: await blackList.filter(it => it === user)\n  });\n};\nexport const updateDisplayName = async (id, displayName) => {\n  await firestore.doc(`users/${id}`).update({\n    displayName: displayName\n  });\n  return displayName;\n};\nexport const updateDisplayIcon = async (id, displayIcon) => {\n  await firestore.doc(`users/${id}`).update({\n    displayIcon: displayIcon\n  });\n  return displayIcon;\n};\nexport const updateActivityStatus = async (id, activityStatus) => {\n  const update = activityStatus === \"offline\" ? \"online\" : \"offline\";\n  await firestore.doc(`users/${id}`).update({\n    activityStatus: update\n  });\n  return update;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport default firebase;","map":{"version":3,"sources":["/Users/stanton.dobson/Documents/Portfolio_Projects/LangFlashApp/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserDocument","userAuth","additionalData","console","log","userRef","firestore","doc","uid","snapShot","get","exists","email","joinDate","Date","displayName","set","error","message","FieldPath","getInnerRef","user","innerAttribute","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","SignInWithGoogle","signInWithPopup","fetchReferenceObject","referenceString","profileData","then","document","data","fetchUserArray","temp","collection","forEach","push","alterActiveDecks","id","activeDecks","update","appendToActiveDecks","filterActiveFriends","friendsList","filter","friend","idx","activityStatus","appendFriend","deleteFriend","it","blackListUser","blackList","whiteListUser","updateDisplayName","updateDisplayIcon","displayIcon","updateActivityStatus","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","obj","newDocRef","commit"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\n\n\nconst config = {\n    apiKey: \"AIzaSyDaZiqbkNS-wFDih0zU3rv0bUYC_gU8LiY\",\n    authDomain: \"langflash-db.firebaseapp.com\",\n    databaseURL: \"https://langflash-db.firebaseio.com\",\n    projectId: \"langflash-db\",\n    storageBucket: \"langflash-db.appspot.com\",\n    messagingSenderId: \"750372521965\",\n    appId: \"1:750372521965:web:1394ec28b8a0f9e00bc9e4\",\n    measurementId: \"G-JY3RHBYG3X\"\n  };\n\nfirebase.initializeApp(config);\n\n\nexport const createUserDocument = async (userAuth, additionalData) => {\n    if (!userAuth)\n        return;\n    console.log(\"Friend object with uid\", userAuth)\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapShot = await userRef.get();\n    \n    if (!snapShot.exists)\n    {\n        const {email, uid} = userAuth;\n        const joinDate = new Date();\n\n\n        const displayName = !userAuth.displayName ? userAuth.displayName : additionalData.displayName;\n\n        try {\n            await userRef.set({uid, displayName, email, joinDate, ...additionalData});\n        } catch (error) {\n            console.log(\"error creating user\", error.message)\n        }\n    }\n\n    //changeCurrentUser(snapShot.data());\n    console.log(\"UserRef going out\", userRef, userRef.get(new firestore.FieldPath('activityStatus')));\n    return userRef;\n}\n\nexport const getInnerRef = async (user, innerAttribute) => {\n    const userRef = firestore.doc(`users/${user.uid}`);\n    return await userRef.get(innerAttribute);\n}\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nprovider.setCustomParameters({prompt: 'select_account'});\n\nexport const SignInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport const fetchReferenceObject =  async (referenceString) => {\n    let profileData = {};\n    await firestore.doc(referenceString).get().then((document) => {\n        profileData = {...profileData, data: document.data()};\n    })\n    return profileData;\n}\n\nexport const fetchUserArray = async () => {\n    const temp = [];\n    await firestore.collection('/users').get().then((collection) => {\n        collection.forEach((document) => {temp.push(document.data())}) \n    });\n    return temp;\n}\n\nexport const alterActiveDecks = async (id, activeDecks) => {\n    await firestore.doc(`users/${id}`).update({activeDecks: activeDecks});\n    return activeDecks;\n}\n\nexport const appendToActiveDecks = async (id, activeDecks) => {\n    await firestore.doc(`users/${id}`).update({activeDecks: activeDecks});\n    return activeDecks;\n}\n\nexport const filterActiveFriends = async (friendsList) => {\n    return await friendsList.filter((friend, idx) => idx < 5 && firestore.doc(friend).get().activityStatus === \"online\");\n}\n\nexport const appendFriend = async (id, friendsList, friend) => {\n    //caches the referenceString within friendsList at this point\n    return await firestore.doc(`users/${id}`).update({friendsList: [...friendsList, friend]});\n}\n\nexport const deleteFriend = async (id, friendsList, friend) => {\n        return await firestore.doc(`users/${id}`).update({friendsList: await friendsList.filter((it) => it === friend)});\n}\n\nexport const blackListUser = async (id, blackList, user) => {\n    return await firestore.doc(`users/${id}`).update({blackList: [...blackList, user]});\n}\n\nexport const whiteListUser = async (id, blackList, user) => {\n    return await firestore.doc(`users/${id}`).update({blackList: await blackList.filter((it) => it === user)});\n}\n\nexport const updateDisplayName = async (id, displayName) => {\n    await firestore.doc(`users/${id}`).update({displayName: displayName});\n    return displayName;\n}\n\nexport const updateDisplayIcon = async (id, displayIcon) => {\n    await firestore.doc(`users/${id}`).update({displayIcon: displayIcon});\n    return displayIcon;\n}\n\nexport const updateActivityStatus = async (id, activityStatus) => {\n    const update = activityStatus === \"offline\" ? \"online\" : \"offline\";\n    await firestore.doc(`users/${id}`).update({activityStatus: update})\n    return update;\n} \n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n    const batch = firestore.batch();\n    objectsToAdd.forEach(obj => {const newDocRef = collectionRef.doc()\n    batch.set(newDocRef, obj)});\n\n\n   return await batch.commit();\n  }\n\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}