{"ast":null,"code":"var _jsxFileName = \"/Users/stanton.dobson/Documents/Portfolio_Projects/LangFlashApp/client/src/components/browse-friends/browse-friends.component.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ProfileTab from '../../components/profile-tab/profile-tab.component';\nimport { UserContext } from '../../providers/user/user.provider';\nimport { fetchUserArray } from '../../firebase/firebase.utils';\nimport { TabBanner, DisplayContainer, PageWrapper } from './browse-friends.styles';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst BrowseFriends = ({\n  history\n}) => {\n  const {\n    currentUser,\n    friendsList\n  } = useContext(UserContext);\n  const [userArray, setUserArray] = useState([]);\n  const [loading, setLoading] = useState([!currentUser]);\n  let userKey;\n  useEffect(() => {\n    async function fetchData() {\n      const fetchedUserArray = await fetchUserArray();\n      setUserArray(fetchedUserArray);\n    }\n\n    fetchData();\n  }, []);\n\n  if (localStorage.getItem(\"currentUser\") && loading) {\n    userKey = localStorage.getItem(\"currentUser\");\n    setLoading(!loading);\n  }\n\n  const handleClick = event => {\n    const {\n      key\n    } = event.target;\n    history.push(`/profile/${key}`);\n  };\n\n  console.log(\"userArray: \", userArray);\n  console.log('loading');\n  console.log(currentUser);\n  return /*#__PURE__*/React.createElement(PageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(TabBanner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Browse Users\"), loading ? /*#__PURE__*/React.createElement(ClipLoader, {\n    color: 'blue',\n    size: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(DisplayContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, friendsList && userArray.filter(item => item.uid !== userKey && !friendsList.find(friend => item.uid === friend.currentUser.uid)).map((user, idx) => /*#__PURE__*/React.createElement(ProfileTab, {\n    key: idx,\n    user: user,\n    handleClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 167\n    }\n  }))));\n};\n\nexport default withRouter(BrowseFriends);","map":{"version":3,"sources":["/Users/stanton.dobson/Documents/Portfolio_Projects/LangFlashApp/client/src/components/browse-friends/browse-friends.component.jsx"],"names":["React","useState","useContext","useEffect","withRouter","ProfileTab","UserContext","fetchUserArray","TabBanner","DisplayContainer","PageWrapper","ClipLoader","BrowseFriends","history","currentUser","friendsList","userArray","setUserArray","loading","setLoading","userKey","fetchData","fetchedUserArray","localStorage","getItem","handleClick","event","key","target","push","console","log","filter","item","uid","find","friend","map","user","idx"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,UAAP,MAAuB,oDAAvB;AACA,SAAQC,WAAR,QAA0B,oCAA1B;AACA,SAAQC,cAAR,QAA6B,+BAA7B;AACA,SAAQC,SAAR,EAAmBC,gBAAnB,EAAqCC,WAArC,QAAuD,yBAAvD;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAGnC,QAAM;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA6Bb,UAAU,CAACI,WAAD,CAA7C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,CAAC,CAACa,WAAF,CAAD,CAAtC;AACA,MAAIM,OAAJ;AAGEjB,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAekB,SAAf,GAA2B;AACzB,YAAMC,gBAAgB,GAAG,MAAMf,cAAc,EAA7C;AACAU,MAAAA,YAAY,CAACK,gBAAD,CAAZ;AACD;;AACDD,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;;AAQA,MAAIE,YAAY,CAACC,OAAb,CAAqB,aAArB,KAAuCN,OAA3C,EAAoD;AAClDE,IAAAA,OAAO,GAAGG,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAV;AACAL,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD;;AAED,QAAMO,WAAW,GAAGC,KAAK,IAAI;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAUD,KAAK,CAACE,MAAtB;AACAf,IAAAA,OAAO,CAACgB,IAAR,CAAc,YAAWF,GAAI,EAA7B;AACD,GAHD;;AAIDG,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Bf,SAA3B;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYjB,WAAZ;AAGC,sBAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADG,EAEFI,OAAO,gBACN,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE,MAAnB;AAA2B,IAAA,IAAI,EAAE,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAEN,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,WAAW,IAAIC,SAAS,CAACgB,MAAV,CAAkBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAad,OAAb,IAAwB,CAACL,WAAW,CAACoB,IAAZ,CAAkBC,MAAD,IAAYH,IAAI,CAACC,GAAL,KAAaE,MAAM,CAACtB,WAAP,CAAmBoB,GAA7D,CAApD,EAAuHG,GAAvH,CAA2H,CAACC,IAAD,EAAOC,GAAP,kBAAe,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,GAAjB;AAAsB,IAAA,IAAI,EAAED,IAA5B;AAAkC,IAAA,WAAW,EAAEb,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1I,CADlB,CAJC,CAAP;AASH,CAxCD;;AA0CA,eAAerB,UAAU,CAACQ,aAAD,CAAzB","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport ProfileTab from '../../components/profile-tab/profile-tab.component';\nimport {UserContext} from '../../providers/user/user.provider';\nimport {fetchUserArray} from '../../firebase/firebase.utils';\nimport {TabBanner, DisplayContainer, PageWrapper} from './browse-friends.styles';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n\nconst BrowseFriends = ({history}) => {\n\n\n  const {currentUser, friendsList} = useContext(UserContext);\n  const [userArray, setUserArray] = useState([]);\n  const [loading, setLoading] = useState([!currentUser]);\n  let userKey;\n\n\n    useEffect(() => {\n      async function fetchData() {\n        const fetchedUserArray = await fetchUserArray();\n        setUserArray(fetchedUserArray);\n      }\n      fetchData();\n    }, [])\n\n    if (localStorage.getItem(\"currentUser\") && loading) {\n      userKey = localStorage.getItem(\"currentUser\");\n      setLoading(!loading);\n    }\n\n    const handleClick = event => {\n      const { key } = event.target;\n      history.push(`/profile/${key}`);\n    }\n   console.log(\"userArray: \", userArray);\n   console.log('loading');\n   console.log(currentUser);\n\n\n    return <PageWrapper>\n        <TabBanner>Browse Users</TabBanner>\n        {loading ?\n          <ClipLoader color={'blue'} size={150}/> :\n          <DisplayContainer>\n            {friendsList && userArray.filter((item) => item.uid !== userKey && !friendsList.find((friend) => item.uid === friend.currentUser.uid)).map((user, idx) => <ProfileTab key={idx} user={user} handleClick={handleClick}/>)}\n          </DisplayContainer>\n        }\n    </PageWrapper>\n}\n\nexport default withRouter(BrowseFriends);"]},"metadata":{},"sourceType":"module"}