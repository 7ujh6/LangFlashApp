{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stant\\\\Documents\\\\PortfolioProjects\\\\VentilatorDonationApp\\\\ventilator-donation\\\\client\\\\src\\\\components\\\\public-profile\\\\public-profile.component.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { fetchReferenceObject } from '../../firebase/firebase.utils';\nimport { UserContext } from '../../providers/user/user.provider';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport Decks from '../../components/decks/decks.component';\nimport { withRouter } from 'react-router-dom';\nimport { PublicProfileContainer, ProfileContainer, ProfileIconContainer, DisplayNameContainer, ButtonsContainer, ActivityIcon, ProfileIcon } from './public-profile.styles';\n\nconst PublicProfile = ({\n  match\n}) => {\n  const {\n    userId\n  } = match.params;\n  const [profileData, setProfileData] = useState({\n    data: {\n      displayName: null,\n      displayIcon: null,\n      activityStatus: null,\n      activeDecks: []\n    }\n  });\n  useEffect(() => {\n    async function fetchProfileData() {\n      const fetchedProfileData = await fetchReferenceObject(`/users/${userId}`);\n      setProfileData(fetchedProfileData);\n    }\n\n    fetchProfileData();\n  }, []);\n  const {\n    displayName,\n    displayIcon,\n    activityStatus,\n    activeDecks\n  } = profileData.data;\n  const {\n    friendsList,\n    blackList,\n    addFriend,\n    removeFriend,\n    blockUser,\n    unblockUser\n  } = useContext(UserContext);\n  const [friendAdded, toggleFriendAdded] = useState(async () => await friendsList.find(friend => friend.uid === userId));\n  const [userBlocked, toggleUserBlocked] = useState(async () => await blackList.find(user => user.uid === userId));\n\n  const handleAddAction = event => {\n    try {\n      if (displayName) {\n        addFriend(profileData.data);\n        if (userBlocked) toggleUserBlocked();\n        toggleFriendAdded();\n      }\n    } catch {\n      alert(\"Error with adding user. Try again later\");\n    }\n  };\n\n  const handleRemoveAction = event => {\n    try {\n      if (displayName) {\n        removeFriend(profileData.data);\n        toggleFriendAdded();\n      }\n    } catch (error) {\n      alert(\"Error with unfriending user. Try again later\");\n    }\n  };\n\n  const handleBlockAction = event => {\n    try {\n      if (displayName) {\n        blockUser(profileData.data);\n        if (friendAdded) toggleFriendAdded();\n        toggleUserBlocked();\n      }\n    } catch (error) {\n      alert(\"Error with blocking user. Try again later.\");\n    }\n  };\n\n  const handleUnblockAction = event => {\n    try {\n      if (displayName) {\n        unblockUser(profileData.data);\n        toggleUserBlocked();\n      }\n    } catch (error) {\n      alert(\"Error with unblocking user. Try again later.\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(PublicProfileContainer, {\n    activityStatus: activityStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(ProfileContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProfileIconContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(ProfileIcon, {\n    alt: \"profile-icon\",\n    src: displayIcon,\n    height: \"100\",\n    width: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(ActivityIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(DisplayNameContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, displayName), /*#__PURE__*/React.createElement(ButtonsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, !friendAdded ? /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleAddAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, \"Add Friend\") : /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleRemoveAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 97\n    }\n  }, \"Unfriend\"), !userBlocked ? /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleBlockAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"Block User\") : /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleUnblockAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 99\n    }\n  }, \"Unblock User\"), /*#__PURE__*/React.createElement(CustomButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Chat\")), /*#__PURE__*/React.createElement(Decks, {\n    isPublicProfile: true,\n    activeDecks: activeDecks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default withRouter(PublicProfile);","map":{"version":3,"sources":["C:/Users/stant/Documents/PortfolioProjects/VentilatorDonationApp/ventilator-donation/client/src/components/public-profile/public-profile.component.jsx"],"names":["React","useState","useContext","useEffect","fetchReferenceObject","UserContext","CustomButton","Decks","withRouter","PublicProfileContainer","ProfileContainer","ProfileIconContainer","DisplayNameContainer","ButtonsContainer","ActivityIcon","ProfileIcon","PublicProfile","match","userId","params","profileData","setProfileData","data","displayName","displayIcon","activityStatus","activeDecks","fetchProfileData","fetchedProfileData","friendsList","blackList","addFriend","removeFriend","blockUser","unblockUser","friendAdded","toggleFriendAdded","find","friend","uid","userBlocked","toggleUserBlocked","user","handleAddAction","event","alert","handleRemoveAction","error","handleBlockAction","handleUnblockAction"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\nimport {fetchReferenceObject} from '../../firebase/firebase.utils';\r\nimport {UserContext} from '../../providers/user/user.provider';\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\nimport Decks from '../../components/decks/decks.component';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport {PublicProfileContainer, ProfileContainer, ProfileIconContainer, DisplayNameContainer, ButtonsContainer,\r\n     ActivityIcon, ProfileIcon} from './public-profile.styles';\r\n\r\n\r\nconst PublicProfile = ({match}) => {\r\n    const {userId} = match.params;\r\n\r\n\r\n    const [profileData, setProfileData] = useState({\r\n        data: {displayName: null, displayIcon: null, activityStatus: null, activeDecks:[]}});\r\n        \r\n    useEffect(() => {\r\n        async function fetchProfileData() {\r\n           const fetchedProfileData = await fetchReferenceObject(`/users/${userId}`); \r\n           setProfileData(fetchedProfileData);\r\n        }\r\n\r\n        fetchProfileData();\r\n    }, [])\r\n\r\n\r\n    const {displayName, displayIcon, activityStatus, activeDecks} =  profileData.data;\r\n    const {friendsList, blackList, addFriend, removeFriend, blockUser, unblockUser} = useContext(UserContext);\r\n\r\n\r\n    const [friendAdded, toggleFriendAdded] = useState(async () => await friendsList.find((friend) => friend.uid === userId));\r\n    const [userBlocked, toggleUserBlocked] = useState(async () => await blackList.find((user) => user.uid === userId));\r\n\r\n    const handleAddAction = event => {\r\n        try {\r\n            if (displayName) {\r\n                addFriend(profileData.data);\r\n                if (userBlocked) toggleUserBlocked();\r\n                toggleFriendAdded();\r\n            }\r\n        } catch {\r\n            alert(\"Error with adding user. Try again later\");\r\n        }\r\n    }\r\n\r\n    const handleRemoveAction = event => {\r\n       try {\r\n            if (displayName) {\r\n                removeFriend(profileData.data);\r\n                toggleFriendAdded();\r\n            }\r\n        } catch (error) {\r\n            alert(\"Error with unfriending user. Try again later\");\r\n        } \r\n    }\r\n\r\n    const handleBlockAction = event => {\r\n        try {\r\n            if (displayName) {\r\n                blockUser(profileData.data);\r\n                if (friendAdded) toggleFriendAdded();\r\n                toggleUserBlocked();\r\n            } \r\n        } catch (error) {\r\n            alert(\"Error with blocking user. Try again later.\")\r\n        }\r\n    }\r\n\r\n    const handleUnblockAction = event => {\r\n        try {if (displayName) {\r\n            unblockUser(profileData.data);\r\n            toggleUserBlocked();\r\n        }} catch (error) {\r\n            alert(\"Error with unblocking user. Try again later.\");\r\n        }\r\n    }\r\n\r\n\r\n    return <PublicProfileContainer activityStatus={activityStatus}>\r\n        <ProfileContainer><ProfileIconContainer><ProfileIcon alt=\"profile-icon\" src={displayIcon} height=\"100\" width=\"100\"/></ProfileIconContainer>\r\n            <ActivityIcon/></ProfileContainer>\r\n        <DisplayNameContainer>{displayName}</DisplayNameContainer>\r\n        <ButtonsContainer>\r\n            {!friendAdded ? <CustomButton onClick={handleAddAction}>Add Friend</CustomButton> : <CustomButton onClick={handleRemoveAction}>Unfriend</CustomButton>}\r\n            {!userBlocked ? <CustomButton onClick={handleBlockAction}>Block User</CustomButton> : <CustomButton onClick={handleUnblockAction}>Unblock User</CustomButton>}\r\n            <CustomButton>Chat</CustomButton>\r\n        </ButtonsContainer>\r\n        \r\n        <Decks isPublicProfile activeDecks={activeDecks}/>\r\n    </PublicProfileContainer>\r\n}\r\n\r\n\r\nexport default withRouter(PublicProfile);"]},"metadata":{},"sourceType":"module"}