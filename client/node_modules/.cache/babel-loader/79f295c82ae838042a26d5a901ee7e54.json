{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDaZiqbkNS-wFDih0zU3rv0bUYC_gU8LiY\",\n  authDomain: \"langflash-db.firebaseapp.com\",\n  databaseURL: \"https://langflash-db.firebaseio.com\",\n  projectId: \"langflash-db\",\n  storageBucket: \"langflash-db.appspot.com\",\n  messagingSenderId: \"750372521965\",\n  appId: \"1:750372521965:web:1394ec28b8a0f9e00bc9e4\",\n  measurementId: \"G-JY3RHBYG3X\"\n};\nfirebase.initializeApp(config);\nexport const createUserDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      email,\n      uid\n    } = userAuth;\n    const joinDate = new Date();\n    const displayName = !userAuth.displayName ? userAuth.displayName : additionalData.displayName;\n\n    try {\n      await userRef.set({\n        uid,\n        displayName,\n        email,\n        joinDate,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  } //changeCurrentUser(snapShot.data());\n\n\n  return userRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const SignInWithGoogle = () => auth.signInWithPopup(provider);\nexport const fetchReferenceObject = async referenceString => {\n  return await firestore.doc(referenceString).get().data();\n};\nexport const fetchUserArray = async () => {\n  const temp = [];\n  await firestore.collection('/users').get().then(collection => {\n    collection.forEach(document => {\n      temp.push(document.data());\n    });\n  });\n  return temp;\n};\nexport const alterActiveDecks = async (id, activeDecks) => {\n  console.log(activeDecks);\n  activeDecks.map(deck => Object.keys(deck).map(async key => {\n    if (key !== \"cards\") {\n      await firestore.doc(`users/${id}/activeDecks/${key}`).update(deck[key]);\n    } else {\n      deck[key].map(card => Object.keys(card).map(async key => await firestore.doc(`users/${id}/activeDecks/cards/${key}`).update(card[key])));\n    }\n  }));\n  return activeDecks;\n};\nexport const appendToActiveDecks = async (id, activeDecks) => {\n  await firestore.doc(`users/${id}`).update({\n    activeDecks: activeDecks\n  });\n  console.log(activeDecks);\n  return activeDecks;\n};\nexport const filterActiveFriends = async friendsList => {\n  return await friendsList.filter((friend, idx) => idx < 5 && firestore.doc(friend).get().activityStatus === \"online\");\n};\nexport const appendFriend = async (id, friendsList, friend) => {\n  //caches the referenceString within friendsList at this point\n  return await firestore.doc(`users/${id}`).update({\n    friendsList: [...friendsList, friend]\n  });\n};\nexport const deleteFriend = async (id, friendsList, friend) => {\n  return await firestore.doc(`users/${id}`).update({\n    friendsList: friendsList.filter(it => it === friend)\n  });\n};\nexport const blackListUser = async (id, blackList, user) => {\n  return await firestore.doc(`users/${id}`).update({\n    blackList: [...blackList, user]\n  });\n};\nexport const whiteListUser = async (id, blackList, user) => {\n  return await firestore.doc(`users/${id}`).update({\n    blackList: blackList.filer(it => it === user)\n  });\n};\nexport const updateDisplayName = async (id, displayName) => {\n  await firestore.doc(`users/${id}`).update({\n    displayName: displayName\n  });\n  return displayName;\n};\nexport const updateDisplayIcon = async (id, displayIcon) => {\n  await firestore.doc(`users/${id}`).update({\n    displayIcon: displayIcon\n  });\n  return displayIcon;\n};\nexport const updateActivityStatus = async (id, activityStatus) => {\n  const update = activityStatus === \"offline\" ? \"online\" : \"offline\";\n  await firestore.doc(`users/${id}`).update({\n    activityStatus: update\n  });\n  return update;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport default firebase;","map":{"version":3,"sources":["C:/Users/stant/Documents/PortfolioProjects/VentilatorDonationApp/ventilator-donation/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","email","joinDate","Date","displayName","set","error","console","log","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","SignInWithGoogle","signInWithPopup","fetchReferenceObject","referenceString","data","fetchUserArray","temp","collection","then","forEach","document","push","alterActiveDecks","id","activeDecks","map","deck","Object","keys","key","update","card","appendToActiveDecks","filterActiveFriends","friendsList","filter","friend","idx","activityStatus","appendFriend","deleteFriend","it","blackListUser","blackList","user","whiteListUser","filer","updateDisplayName","updateDisplayIcon","displayIcon","updateActivityStatus","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","obj","newDocRef","commit"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDaZiqbkNS-wFDih0zU3rv0bUYC_gU8LiY\",\r\n    authDomain: \"langflash-db.firebaseapp.com\",\r\n    databaseURL: \"https://langflash-db.firebaseio.com\",\r\n    projectId: \"langflash-db\",\r\n    storageBucket: \"langflash-db.appspot.com\",\r\n    messagingSenderId: \"750372521965\",\r\n    appId: \"1:750372521965:web:1394ec28b8a0f9e00bc9e4\",\r\n    measurementId: \"G-JY3RHBYG3X\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\n\r\n\r\nexport const createUserDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth)\r\n        return;\r\n\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot = await userRef.get();\r\n    \r\n    if (!snapShot.exists)\r\n    {\r\n        const {email, uid} = userAuth;\r\n        const joinDate = new Date();\r\n\r\n\r\n        const displayName = !userAuth.displayName ? userAuth.displayName : additionalData.displayName;\r\n\r\n        try {\r\n            await userRef.set({uid, displayName, email, joinDate, ...additionalData});\r\n        } catch (error) {\r\n            console.log(\"error creating user\", error.message)\r\n        }\r\n    }\r\n\r\n    //changeCurrentUser(snapShot.data());\r\n    return userRef;\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nprovider.setCustomParameters({prompt: 'select_account'});\r\n\r\nexport const SignInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport const fetchReferenceObject =  async (referenceString) => {\r\n    return await firestore.doc(referenceString).get().data();\r\n}\r\n\r\nexport const fetchUserArray = async () => {\r\n    const temp = [];\r\n    await firestore.collection('/users').get().then((collection) => {\r\n        collection.forEach((document) => {temp.push(document.data())}) \r\n    });\r\n    return temp;\r\n}\r\n\r\nexport const alterActiveDecks = async (id, activeDecks) => {\r\n    console.log(activeDecks);\r\n    activeDecks.map((deck) => Object.keys(deck).map(async (key) => {\r\n        if (key !== \"cards\") {\r\n            await firestore.doc(`users/${id}/activeDecks/${key}`).update(deck[key]);\r\n        } else {\r\n            deck[key].map((card) => Object.keys(card).map(async (key) =>\r\n            await firestore.doc(`users/${id}/activeDecks/cards/${key}`).update(card[key])));\r\n        }\r\n    }))\r\n    return activeDecks;\r\n}\r\n\r\nexport const appendToActiveDecks = async (id, activeDecks) => {\r\n    await firestore.doc(`users/${id}`).update({activeDecks: activeDecks});\r\n    console.log(activeDecks);\r\n    return activeDecks;\r\n}\r\n\r\nexport const filterActiveFriends = async (friendsList) => {\r\n    return await friendsList.filter((friend, idx) => idx < 5 && firestore.doc(friend).get().activityStatus === \"online\");\r\n}\r\n\r\nexport const appendFriend = async (id, friendsList, friend) => {\r\n    //caches the referenceString within friendsList at this point\r\n    return await firestore.doc(`users/${id}`).update({friendsList: [...friendsList, friend]});\r\n}\r\n\r\nexport const deleteFriend = async (id, friendsList, friend) => {\r\n        return await firestore.doc(`users/${id}`).update({friendsList: friendsList.filter((it) => it === friend)});\r\n}\r\n\r\nexport const blackListUser = async (id, blackList, user) => {\r\n    return await firestore.doc(`users/${id}`).update({blackList: [...blackList, user]});\r\n}\r\n\r\nexport const whiteListUser = async (id, blackList, user) => {\r\n    return await firestore.doc(`users/${id}`).update({blackList: blackList.filer((it) => it === user)});\r\n}\r\n\r\nexport const updateDisplayName = async (id, displayName) => {\r\n    await firestore.doc(`users/${id}`).update({displayName: displayName});\r\n    return displayName;\r\n}\r\n\r\nexport const updateDisplayIcon = async (id, displayIcon) => {\r\n    await firestore.doc(`users/${id}`).update({displayIcon: displayIcon});\r\n    return displayIcon;\r\n}\r\n\r\nexport const updateActivityStatus = async (id, activityStatus) => {\r\n    const update = activityStatus === \"offline\" ? \"online\" : \"offline\";\r\n    await firestore.doc(`users/${id}`).update({activityStatus: update})\r\n    return update;\r\n} \r\n\r\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey);\r\n    const batch = firestore.batch();\r\n    objectsToAdd.forEach(obj => {const newDocRef = collectionRef.doc()\r\n    batch.set(newDocRef, obj)});\r\n\r\n\r\n   return await batch.commit();\r\n  }\r\n\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}