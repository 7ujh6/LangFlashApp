{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stant\\\\Documents\\\\PortfolioProjects\\\\VentilatorDonationApp\\\\ventilator-donation\\\\client\\\\src\\\\components\\\\public-profile\\\\public-profile.component.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { fetchReferenceObject } from '../../firebase/firebase.utils';\nimport { UserContext } from '../../providers/user/user.provider';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport Decks from '../../components/decks/decks.component';\nimport { PublicProfileContainer, ProfileContainer, ProfileIconContainer, DisplayNameContainer, ButtonsContainer, ActivityIcon } from './public-profile.styles';\n\nconst PublicProfile = ({\n  match\n}) => {\n  console.log(match);\n  console.log(\"I am being reached\");\n  const [profileData, setProfileData] = useState(null);\n  useEffect(() => {\n    console.log(match);\n    console.log(match.params.userId);\n\n    async function fetchProfileData() {\n      const fetchedProfileData = await fetchReferenceObject(`users/${match.params}`).then(result => console.log(result));\n      setProfileData(fetchedProfileData);\n    }\n\n    fetchProfileData();\n  }, []); // const {displayName, displayIcon, activityStatus, activeDecks} =  profileData.data;\n  // const {friendsList, blackList, addFriend, removeFriend, blockUser, unblockUser} = useContext(UserContext);\n  // console.log(friendsList, blackList);\n  // friendsList.map(friend=> console.log(friend))\n  // const [friendAdded, toggleFriendAdded] = useState(friendsList.find((friend) => friend.uid === userId));\n  // const [userBlocked, toggleUserBlocked] = useState(blackList).find((user) => user.uid === userId);\n  // const handleAddAction = event => {\n  //     addFriend(profileData.data);\n  //     if (userBlocked) toggleUserBlocked();\n  //     toggleFriendAdded();\n  // }\n  // const handleRemoveAction = event => {\n  //     removeFriend(profileData.data);\n  //     toggleFriendAdded();\n  // }\n  // const handleBlockAction = event => {\n  //     blockUser(profileData.data);\n  //     if (friendAdded) toggleFriendAdded();\n  //     toggleUserBlocked();\n  // }\n  // const handleUnblockAction = event => {\n  //     unblockUser(profileData.data);\n  // }\n  // return <PublicProfileContainer activityStatus={activityStatus}>\n  //     <ProfileContainer><ProfileIconContainer><img alt=\"profile-icon\" src={displayIcon} height=\"100\" width=\"100\"/></ProfileIconContainer>\n  //         <ActivityIcon/></ProfileContainer>\n  //     <DisplayNameContainer>{displayName}</DisplayNameContainer>\n  //     <ButtonsContainer>\n  //         {!friendAdded ? <CustomButton onClick={handleAddAction}>Add Friend</CustomButton> : <CustomButton onClick={handleRemoveAction}>Unfriend</CustomButton>}\n  //         {!userBlocked ? <CustomButton onClick={handleBlockAction}>Block User</CustomButton> : <CustomButton onClick={handleUnblockAction}>Unblock User</CustomButton>}\n  //         <CustomButton>Chat</CustomButton>\n  //     </ButtonsContainer>\n  //     <Decks activeDecks={activeDecks}/>\n  // </PublicProfileContainer>\n\n  return /*#__PURE__*/React.createElement(PublicProfileContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }\n  });\n};\n\nexport default PublicProfile;","map":{"version":3,"sources":["C:/Users/stant/Documents/PortfolioProjects/VentilatorDonationApp/ventilator-donation/client/src/components/public-profile/public-profile.component.jsx"],"names":["React","useState","useContext","useEffect","fetchReferenceObject","UserContext","CustomButton","Decks","PublicProfileContainer","ProfileContainer","ProfileIconContainer","DisplayNameContainer","ButtonsContainer","ActivityIcon","PublicProfile","match","console","log","profileData","setProfileData","params","userId","fetchProfileData","fetchedProfileData","then","result"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAAQC,oBAAR,QAAmC,+BAAnC;AACA,SAAQC,WAAR,QAA0B,oCAA1B;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,KAAP,MAAkB,wCAAlB;AAEA,SAAQC,sBAAR,EAAgCC,gBAAhC,EAAkDC,oBAAlD,EAAwEC,oBAAxE,EAA8FC,gBAA9F,EACKC,YADL,QACwB,yBADxB;;AAIA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,IAAD,CAA9C;AACAE,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACK,MAAN,CAAaC,MAAzB;;AACA,mBAAeC,gBAAf,GAAkC;AAC9B,YAAMC,kBAAkB,GAAG,MAAMnB,oBAAoB,CAAE,SAAQW,KAAK,CAACK,MAAO,EAAvB,CAApB,CAA8CI,IAA9C,CAAoDC,MAAD,IAAYT,OAAO,CAACC,GAAR,CAAYQ,MAAZ,CAA/D,CAAjC;AACAN,MAAAA,cAAc,CAACI,kBAAD,CAAd;AAEH;;AACDD,IAAAA,gBAAgB;AACnB,GATQ,EASN,EATM,CAAT,CAL+B,CAgB/B;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBAAO,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CA3DD;;AA6DA,eAAeR,aAAf","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\nimport {fetchReferenceObject} from '../../firebase/firebase.utils';\r\nimport {UserContext} from '../../providers/user/user.provider';\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\nimport Decks from '../../components/decks/decks.component';\r\n\r\nimport {PublicProfileContainer, ProfileContainer, ProfileIconContainer, DisplayNameContainer, ButtonsContainer,\r\n     ActivityIcon} from './public-profile.styles';\r\n\r\n\r\nconst PublicProfile = ({match}) => {\r\n    console.log(match);\r\n    console.log(\"I am being reached\")\r\n\r\n    const [profileData, setProfileData] = useState(null);\r\n    useEffect(() => {\r\n        console.log(match)\r\n        console.log(match.params.userId);\r\n        async function fetchProfileData() {\r\n            const fetchedProfileData = await fetchReferenceObject(`users/${match.params}`).then((result) => console.log(result));\r\n            setProfileData(fetchedProfileData);\r\n            \r\n        }\r\n        fetchProfileData();\r\n    }, [])\r\n    \r\n    // const {displayName, displayIcon, activityStatus, activeDecks} =  profileData.data;\r\n    // const {friendsList, blackList, addFriend, removeFriend, blockUser, unblockUser} = useContext(UserContext);\r\n    // console.log(friendsList, blackList);\r\n    // friendsList.map(friend=> console.log(friend))\r\n\r\n\r\n    // const [friendAdded, toggleFriendAdded] = useState(friendsList.find((friend) => friend.uid === userId));\r\n    // const [userBlocked, toggleUserBlocked] = useState(blackList).find((user) => user.uid === userId);\r\n\r\n    // const handleAddAction = event => {\r\n    //     addFriend(profileData.data);\r\n    //     if (userBlocked) toggleUserBlocked();\r\n    //     toggleFriendAdded();\r\n    // }\r\n\r\n    // const handleRemoveAction = event => {\r\n    //     removeFriend(profileData.data);\r\n    //     toggleFriendAdded();\r\n    // }\r\n\r\n    // const handleBlockAction = event => {\r\n    //     blockUser(profileData.data);\r\n    //     if (friendAdded) toggleFriendAdded();\r\n    //     toggleUserBlocked();\r\n    // }\r\n\r\n    // const handleUnblockAction = event => {\r\n    //     unblockUser(profileData.data);\r\n    // }\r\n\r\n\r\n    // return <PublicProfileContainer activityStatus={activityStatus}>\r\n    //     <ProfileContainer><ProfileIconContainer><img alt=\"profile-icon\" src={displayIcon} height=\"100\" width=\"100\"/></ProfileIconContainer>\r\n    //         <ActivityIcon/></ProfileContainer>\r\n    //     <DisplayNameContainer>{displayName}</DisplayNameContainer>\r\n    //     <ButtonsContainer>\r\n    //         {!friendAdded ? <CustomButton onClick={handleAddAction}>Add Friend</CustomButton> : <CustomButton onClick={handleRemoveAction}>Unfriend</CustomButton>}\r\n    //         {!userBlocked ? <CustomButton onClick={handleBlockAction}>Block User</CustomButton> : <CustomButton onClick={handleUnblockAction}>Unblock User</CustomButton>}\r\n    //         <CustomButton>Chat</CustomButton>\r\n    //     </ButtonsContainer>\r\n    //     <Decks activeDecks={activeDecks}/>\r\n    // </PublicProfileContainer>\r\n    return <PublicProfileContainer></PublicProfileContainer> \r\n}\r\n\r\nexport default PublicProfile;"]},"metadata":{},"sourceType":"module"}