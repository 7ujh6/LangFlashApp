{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stant\\\\Documents\\\\PortfolioProjects\\\\VentilatorDonationApp\\\\ventilator-donation\\\\client\\\\src\\\\components\\\\public-profile\\\\public-profile.component.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { fetchReferenceObject } from '../../firebase/firebase.utils';\nimport { UserContext } from '../../providers/user/user.provider';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport Decks from '../../components/decks/decks.component';\nimport { withRouter } from 'react-router-dom';\nimport { PublicProfileContainer, ProfileContainer, ProfileIconContainer, DisplayNameContainer, ButtonsContainer, ActivityIcon } from './public-profile.styles';\n\nconst PublicProfile = ({\n  match\n}) => {\n  const {\n    userId\n  } = match.params;\n  const [profileData, setProfileData] = useState({\n    data: {\n      displayName: null,\n      displayIcon: null,\n      activityStatus: null,\n      activeDecks: []\n    }\n  });\n  useEffect(() => {\n    async function fetchProfileData() {\n      const fetchedProfileData = await fetchReferenceObject(`/users/${userId}`);\n      setProfileData(fetchedProfileData);\n    }\n\n    fetchProfileData();\n  }, []);\n  const {\n    displayName,\n    displayIcon,\n    activityStatus,\n    activeDecks\n  } = profileData.data;\n  const {\n    friendsList,\n    blackList,\n    addFriend,\n    removeFriend,\n    blockUser,\n    unblockUser\n  } = useContext(UserContext);\n  console.log(friendsList, blackList);\n  friendsList.map(friend => console.log(friend));\n  console.log(profileData.data);\n  const [friendAdded, toggleFriendAdded] = useState(friendsList.find(friend => friend.uid === userId));\n  const [userBlocked, toggleUserBlocked] = useState(blackList.find(user => user.uid === userId));\n\n  const handleAddAction = event => {\n    if (displayName) {\n      addFriend(profileData.data);\n      if (userBlocked) toggleUserBlocked();\n      toggleFriendAdded();\n    }\n  };\n\n  const handleRemoveAction = event => {\n    if (displayName) {\n      removeFriend(profileData.data);\n      toggleFriendAdded();\n    }\n  };\n\n  const handleBlockAction = event => {\n    if (displayName) {\n      blockUser(profileData.data);\n      if (friendAdded) toggleFriendAdded();\n      toggleUserBlocked();\n    }\n  };\n\n  const handleUnblockAction = event => {\n    if (displayName) {\n      unblockUser(profileData.data);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(PublicProfileContainer, {\n    activityStatus: activityStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(ProfileContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProfileIconContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"profile-icon\",\n    src: displayIcon,\n    height: \"100\",\n    width: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(ActivityIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(DisplayNameContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, displayName), /*#__PURE__*/React.createElement(ButtonsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, !friendAdded ? /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleAddAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, \"Add Friend\") : /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleRemoveAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 97\n    }\n  }, \"Unfriend\"), !userBlocked ? /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleBlockAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, \"Block User\") : /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleUnblockAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 99\n    }\n  }, \"Unblock User\"), /*#__PURE__*/React.createElement(CustomButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Chat\")), /*#__PURE__*/React.createElement(Decks, {\n    activeDecks: activeDecks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default withRouter(PublicProfile);","map":{"version":3,"sources":["C:/Users/stant/Documents/PortfolioProjects/VentilatorDonationApp/ventilator-donation/client/src/components/public-profile/public-profile.component.jsx"],"names":["React","useState","useContext","useEffect","fetchReferenceObject","UserContext","CustomButton","Decks","withRouter","PublicProfileContainer","ProfileContainer","ProfileIconContainer","DisplayNameContainer","ButtonsContainer","ActivityIcon","PublicProfile","match","userId","params","profileData","setProfileData","data","displayName","displayIcon","activityStatus","activeDecks","fetchProfileData","fetchedProfileData","friendsList","blackList","addFriend","removeFriend","blockUser","unblockUser","console","log","map","friend","friendAdded","toggleFriendAdded","find","uid","userBlocked","toggleUserBlocked","user","handleAddAction","event","handleRemoveAction","handleBlockAction","handleUnblockAction"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\nimport {fetchReferenceObject} from '../../firebase/firebase.utils';\r\nimport {UserContext} from '../../providers/user/user.provider';\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\nimport Decks from '../../components/decks/decks.component';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport {PublicProfileContainer, ProfileContainer, ProfileIconContainer, DisplayNameContainer, ButtonsContainer,\r\n     ActivityIcon} from './public-profile.styles';\r\n\r\n\r\nconst PublicProfile = ({match}) => {\r\n    const {userId} = match.params;\r\n\r\n\r\n    const [profileData, setProfileData] = useState({\r\n        data: {displayName: null, displayIcon: null, activityStatus: null, activeDecks:[]}});\r\n        \r\n    useEffect(() => {\r\n        async function fetchProfileData() {\r\n           const fetchedProfileData = await fetchReferenceObject(`/users/${userId}`); \r\n           setProfileData(fetchedProfileData);\r\n        }\r\n\r\n        fetchProfileData();\r\n    }, [])\r\n\r\n\r\n    const {displayName, displayIcon, activityStatus, activeDecks} =  profileData.data;\r\n    const {friendsList, blackList, addFriend, removeFriend, blockUser, unblockUser} = useContext(UserContext);\r\n    console.log(friendsList, blackList);\r\n    friendsList.map(friend=> console.log(friend))\r\n    console.log(profileData.data)\r\n\r\n\r\n    const [friendAdded, toggleFriendAdded] = useState(friendsList.find((friend) => friend.uid === userId));\r\n    const [userBlocked, toggleUserBlocked] = useState(blackList.find((user) => user.uid === userId));\r\n\r\n    const handleAddAction = event => {\r\n        if (displayName) {\r\n            addFriend(profileData.data);\r\n            if (userBlocked) toggleUserBlocked();\r\n            toggleFriendAdded();\r\n        }\r\n    }\r\n\r\n    const handleRemoveAction = event => {\r\n        if (displayName) {\r\n            removeFriend(profileData.data);\r\n            toggleFriendAdded();\r\n        }\r\n    }\r\n\r\n    const handleBlockAction = event => {\r\n        if (displayName) {\r\n            blockUser(profileData.data);\r\n            if (friendAdded) toggleFriendAdded();\r\n            toggleUserBlocked();\r\n        }\r\n    }\r\n\r\n    const handleUnblockAction = event => {\r\n        if (displayName) {\r\n            unblockUser(profileData.data);\r\n        }\r\n    }\r\n\r\n\r\n    return <PublicProfileContainer activityStatus={activityStatus}>\r\n        <ProfileContainer><ProfileIconContainer><img alt=\"profile-icon\" src={displayIcon} height=\"100\" width=\"100\"/></ProfileIconContainer>\r\n            <ActivityIcon/></ProfileContainer>\r\n        <DisplayNameContainer>{displayName}</DisplayNameContainer>\r\n        <ButtonsContainer>\r\n            {!friendAdded ? <CustomButton onClick={handleAddAction}>Add Friend</CustomButton> : <CustomButton onClick={handleRemoveAction}>Unfriend</CustomButton>}\r\n            {!userBlocked ? <CustomButton onClick={handleBlockAction}>Block User</CustomButton> : <CustomButton onClick={handleUnblockAction}>Unblock User</CustomButton>}\r\n            <CustomButton>Chat</CustomButton>\r\n        </ButtonsContainer>\r\n        <Decks activeDecks={activeDecks}/>\r\n    </PublicProfileContainer>\r\n}\r\n\r\n\r\nexport default withRouter(PublicProfile);"]},"metadata":{},"sourceType":"module"}