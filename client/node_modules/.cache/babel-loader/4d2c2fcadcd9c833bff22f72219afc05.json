{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stant\\\\Documents\\\\PortfolioProjects\\\\VentilatorDonationApp\\\\ventilator-donation\\\\client\\\\src\\\\components\\\\public-profile\\\\public-profile.component.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { fetchReferenceObject } from '../../firebase/firebase.utils';\nimport { UserContext } from '../../providers/user/user.provider';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport Decks from '../../components/decks/decks.component';\nimport { PublicProfileContainer, ProfileContainer, ProfileIconContainer, DisplayNameContainer, ButtonsContainer, ActivityIcon } from './public-profile.styles';\n\nconst PublicProfile = ({\n  userId\n}) => {\n  const [profileData, setProfileData] = useState(null);\n  useEffect(() => {\n    async function fetchProfileData() {\n      const fetchedProfileData = await fetchReferenceObject(`users/${userId}`).then(result => console.log(result));\n      setProfileData(fetchedProfileData);\n    }\n\n    fetchProfileData();\n  }, []);\n  const {\n    displayName,\n    displayIcon,\n    activityStatus,\n    activeDecks\n  } = profileData.data;\n  const {\n    friendsList,\n    blackList,\n    addFriend,\n    removeFriend,\n    blockUser,\n    unblockUser\n  } = useContext(UserContext);\n  console.log(friendsList, blackList);\n  friendsList.map(friend => console.log(friend));\n  const [friendAdded, toggleFriendAdded] = useState(friendsList.find(friend => friend.uid === userId));\n  const [userBlocked, toggleUserBlocked] = useState(blackList).find(user => user.uid === userId);\n\n  const handleAddAction = event => {\n    addFriend(profileData.data);\n    if (userBlocked) toggleUserBlocked();\n    toggleFriendAdded();\n  };\n\n  const handleRemoveAction = event => {\n    removeFriend(profileData.data);\n    toggleFriendAdded();\n  };\n\n  const handleBlockAction = event => {\n    blockUser(profileData.data);\n    if (friendAdded) toggleFriendAdded();\n    toggleUserBlocked();\n  };\n\n  const handleUnblockAction = event => {\n    unblockUser(profileData.data);\n  };\n\n  return /*#__PURE__*/React.createElement(PublicProfileContainer, {\n    activityStatus: activityStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ProfileContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProfileIconContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"profile-icon\",\n    src: displayIcon,\n    height: \"100\",\n    width: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(ActivityIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(DisplayNameContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, displayName), /*#__PURE__*/React.createElement(ButtonsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, !friendAdded ? /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleAddAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, \"Add Friend\") : /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleRemoveAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 97\n    }\n  }, \"Unfriend\"), !userBlocked ? /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleBlockAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, \"Block User\") : /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleUnblockAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 99\n    }\n  }, \"Unblock User\"), /*#__PURE__*/React.createElement(CustomButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Chat\")), /*#__PURE__*/React.createElement(Decks, {\n    activeDecks: activeDecks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default PublicProfile;","map":{"version":3,"sources":["C:/Users/stant/Documents/PortfolioProjects/VentilatorDonationApp/ventilator-donation/client/src/components/public-profile/public-profile.component.jsx"],"names":["React","useState","useContext","useEffect","fetchReferenceObject","UserContext","CustomButton","Decks","PublicProfileContainer","ProfileContainer","ProfileIconContainer","DisplayNameContainer","ButtonsContainer","ActivityIcon","PublicProfile","userId","profileData","setProfileData","fetchProfileData","fetchedProfileData","then","result","console","log","displayName","displayIcon","activityStatus","activeDecks","data","friendsList","blackList","addFriend","removeFriend","blockUser","unblockUser","map","friend","friendAdded","toggleFriendAdded","find","uid","userBlocked","toggleUserBlocked","user","handleAddAction","event","handleRemoveAction","handleBlockAction","handleUnblockAction"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\nimport {fetchReferenceObject} from '../../firebase/firebase.utils';\r\nimport {UserContext} from '../../providers/user/user.provider';\r\nimport CustomButton from '../../components/custom-button/custom-button.component';\r\nimport Decks from '../../components/decks/decks.component';\r\n\r\nimport {PublicProfileContainer, ProfileContainer, ProfileIconContainer, DisplayNameContainer, ButtonsContainer,\r\n     ActivityIcon} from './public-profile.styles';\r\n\r\n\r\nconst PublicProfile = ({userId}) => {\r\n\r\n    const [profileData, setProfileData] = useState(null);\r\n    useEffect(() => {\r\n        async function fetchProfileData() {\r\n            const fetchedProfileData = await fetchReferenceObject(`users/${userId}`).then((result) => console.log(result));\r\n            setProfileData(fetchedProfileData);\r\n        }\r\n        fetchProfileData();\r\n    }, [])\r\n    \r\n    const {displayName, displayIcon, activityStatus, activeDecks} =  profileData.data;\r\n    const {friendsList, blackList, addFriend, removeFriend, blockUser, unblockUser} = useContext(UserContext);\r\n    console.log(friendsList, blackList);\r\n    friendsList.map(friend=> console.log(friend))\r\n\r\n\r\n    const [friendAdded, toggleFriendAdded] = useState(friendsList.find((friend) => friend.uid === userId));\r\n    const [userBlocked, toggleUserBlocked] = useState(blackList).find((user) => user.uid === userId);\r\n\r\n    const handleAddAction = event => {\r\n        addFriend(profileData.data);\r\n        if (userBlocked) toggleUserBlocked();\r\n        toggleFriendAdded();\r\n    }\r\n\r\n    const handleRemoveAction = event => {\r\n        removeFriend(profileData.data);\r\n        toggleFriendAdded();\r\n    }\r\n\r\n    const handleBlockAction = event => {\r\n        blockUser(profileData.data);\r\n        if (friendAdded) toggleFriendAdded();\r\n        toggleUserBlocked();\r\n    }\r\n\r\n    const handleUnblockAction = event => {\r\n        unblockUser(profileData.data);\r\n    }\r\n\r\n\r\n    return<PublicProfileContainer activityStatus={activityStatus}>\r\n        <ProfileContainer><ProfileIconContainer><img alt=\"profile-icon\" src={displayIcon} height=\"100\" width=\"100\"/></ProfileIconContainer>\r\n            <ActivityIcon/></ProfileContainer>\r\n        <DisplayNameContainer>{displayName}</DisplayNameContainer>\r\n        <ButtonsContainer>\r\n            {!friendAdded ? <CustomButton onClick={handleAddAction}>Add Friend</CustomButton> : <CustomButton onClick={handleRemoveAction}>Unfriend</CustomButton>}\r\n            {!userBlocked ? <CustomButton onClick={handleBlockAction}>Block User</CustomButton> : <CustomButton onClick={handleUnblockAction}>Unblock User</CustomButton>}\r\n            <CustomButton>Chat</CustomButton>\r\n        </ButtonsContainer>\r\n        <Decks activeDecks={activeDecks}/>\r\n    </PublicProfileContainer> \r\n}\r\n\r\nexport default PublicProfile;"]},"metadata":{},"sourceType":"module"}