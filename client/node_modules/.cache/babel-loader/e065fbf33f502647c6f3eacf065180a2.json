{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stant\\\\Documents\\\\PortfolioProjects\\\\VentilatorDonationApp\\\\ventilator-donation\\\\client\\\\src\\\\providers\\\\user\\\\user.provider.jsx\";\nimport React, { createContext, useState } from 'react';\nimport { updateDisplayName, updateDisplayIcon, updateActivityStatus, appendFriend, deleteFriend } from '../../firebase/firebase.utils';\nimport defaultProfileIcon from '../../assets/default-profile-icon.png';\nexport const UserContext = createContext({\n  currentUser: {\n    id: null,\n    displayName: \"\",\n    displayIcon: null,\n    friendsList: [],\n    blackList: [],\n    activityStatus: \"offline\",\n    activeDecks: [] //array of objects -> {name, language, [items]}; items-> {frontSide=\"\", backSide=\"\"}\n\n  },\n  changeCurrentUser: () => {},\n  changeDisplayName: () => {},\n  changeDisplayIcon: () => {},\n  changeActivityStatus: () => {},\n  addFriend: () => {},\n  deleteFriend: () => {},\n  blockFriend: () => {}\n});\n\nconst UserProvider = ({\n  children\n}) => {\n  const [displayName, setDisplayName] = useState(\"\");\n  const [displayIcon, setDisplayIcon] = useState(null);\n  const [friendsList, setFriendsList] = useState([]);\n  const [blackList, setBlackList] = useState([]);\n  const [activityStatus, setActivityStatus] = useState(\"offline\");\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const changeDisplayName = name => {\n    setDisplayName(updateDisplayName(this.id, name)); //may be redundant to set the state if the state is just going to be refreshed by onSnapshot\n  };\n\n  const changeDisplayIcon = image => {\n    setDisplayIcon(updateDisplayIcon(this.id, image));\n  };\n\n  const addFriend = friend => {\n    setFriendsList(appendFriend(this.id, this.friendsList, friend));\n  };\n\n  const removeFriend = friend => {\n    setFriendsList(deleteFriend(this.id, this.friendsList, friend));\n  };\n\n  const changeActivityStatus = () => {\n    setActivityStatus(updateActivityStatus(this.id, this.activityStatus));\n  };\n\n  const changeCurrentUser = user => {\n    setCurrentUser(user);\n  };\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      currentUser,\n      displayName,\n      displayIcon,\n      activityStatus,\n      friendsList,\n      changeCurrentUser,\n      changeActivityStatus,\n      changeDisplayName,\n      changeDisplayIcon,\n      addFriend,\n      removeFriend\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }\n  }, children);\n};\n\nexport default UserProvider;","map":{"version":3,"sources":["C:/Users/stant/Documents/PortfolioProjects/VentilatorDonationApp/ventilator-donation/client/src/providers/user/user.provider.jsx"],"names":["React","createContext","useState","updateDisplayName","updateDisplayIcon","updateActivityStatus","appendFriend","deleteFriend","defaultProfileIcon","UserContext","currentUser","id","displayName","displayIcon","friendsList","blackList","activityStatus","activeDecks","changeCurrentUser","changeDisplayName","changeDisplayIcon","changeActivityStatus","addFriend","blockFriend","UserProvider","children","setDisplayName","setDisplayIcon","setFriendsList","setBlackList","setActivityStatus","setCurrentUser","name","image","friend","removeFriend","user"],"mappings":"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","sourcesContent":["import React, {createContext, useState} from 'react';\r\nimport {updateDisplayName, updateDisplayIcon, updateActivityStatus, appendFriend, deleteFriend} from '../../firebase/firebase.utils';\r\nimport defaultProfileIcon from '../../assets/default-profile-icon.png';\r\n\r\nexport const UserContext = createContext({\r\n    currentUser: {\r\n        id: null,\r\n        displayName: \"\",\r\n        displayIcon: null,\r\n        friendsList: [],\r\n        blackList: [],\r\n        activityStatus: \"offline\",\r\n        activeDecks: [], //array of objects -> {name, language, [items]}; items-> {frontSide=\"\", backSide=\"\"}\r\n    },\r\n    changeCurrentUser: () => {},\r\n    changeDisplayName: () => {},\r\n    changeDisplayIcon: () => {},\r\n    changeActivityStatus: () => {},\r\n    addFriend: () => {},\r\n    deleteFriend: () => {},\r\n    blockFriend: () => {},\r\n});\r\n\r\nconst UserProvider = ({children}) => {\r\n\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n    const [displayIcon, setDisplayIcon] = useState(null);\r\n    const [friendsList, setFriendsList] = useState([]);\r\n    const [blackList, setBlackList] = useState([]);\r\n    const [activityStatus, setActivityStatus] = useState(\"offline\");\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    const changeDisplayName = name => {\r\n        setDisplayName(updateDisplayName(this.id, name));\r\n        //may be redundant to set the state if the state is just going to be refreshed by onSnapshot\r\n    }\r\n\r\n    const changeDisplayIcon = image => {\r\n        setDisplayIcon(updateDisplayIcon(this.id, image));\r\n    }\r\n\r\n    const addFriend = friend => {\r\n        setFriendsList(appendFriend(this.id, this.friendsList, friend));\r\n    }\r\n\r\n    const removeFriend = friend => {\r\n        setFriendsList(deleteFriend(this.id, this.friendsList, friend));\r\n    }\r\n\r\n    const changeActivityStatus = () => {\r\n        setActivityStatus(updateActivityStatus(this.id, this.activityStatus));\r\n    }\r\n\r\n    const changeCurrentUser = user => {\r\n        setCurrentUser(user);\r\n    }\r\n\r\n    return <UserContext.Provider\r\n    value={{currentUser, displayName, displayIcon, activityStatus, friendsList, changeCurrentUser, changeActivityStatus, changeDisplayName, changeDisplayIcon, addFriend, removeFriend}}>{children}</UserContext.Provider>\r\n}\r\n\r\nexport default UserProvider;"]},"metadata":{},"sourceType":"module"}