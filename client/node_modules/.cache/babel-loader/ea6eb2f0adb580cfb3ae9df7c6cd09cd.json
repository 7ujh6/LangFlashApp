{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stant\\\\Documents\\\\PortfolioProjects\\\\VentilatorDonationApp\\\\ventilator-donation\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Header from './components/header/header.component';\nimport Homepage from './pages/homepage/homepage.component.jsx';\nimport SignInPage from './pages/sign-in-page/sign-in-page.component';\nimport SignUpPage from './pages/sign-up-page/sign-up-page.component';\nimport AboutUsPage from './pages/about-us-page/about-us-page.component';\nimport HowToUsePage from './pages/how-to-use-page/how-to-use-page.component.jsx';\nimport { auth, createUserDocument } from './firebase/firebase.utils';\nimport UserProvider from './providers/user/user.provider';\nimport defaultProfileIcon from './assets/default-profile-icon.png';\nimport './App.css';\nimport ProfileDisplayProvider from './providers/profile-display/profile-display.provider'; //import Redirect -> is there an option that waits a duration before redirecting?\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    auth.signOut();\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserDocument(userAuth, {\n          displayIcon: defaultProfileIcon,\n          friendsList: [],\n          blackList: [],\n          activityStatus: {\n            value: \"online\"\n          },\n          activeDecks: []\n        });\n        userRef.onSnapshot(snapShot => {\n          this.setState({\n            currentUser: {\n              id: snapShot.id,\n              ...snapShot.data()\n            }\n          });\n        });\n      } else this.setState({\n        currentUser: userAuth\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(UserProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(ProfileDisplayProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Homepage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.state.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 81\n        }\n      }) : /*#__PURE__*/React.createElement(SignInPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 104\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: () => this.state.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/getstarted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 81\n        }\n      }) : /*#__PURE__*/React.createElement(SignUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 114\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/aboutus\",\n      component: AboutUsPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/howtouse\",\n      render: () => !this.state.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/signin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 84\n        }\n      }) : /*#__PURE__*/React.createElement(HowToUsePage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 113\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/getstarted\",\n      component: HowToUsePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/stant/Documents/PortfolioProjects/VentilatorDonationApp/ventilator-donation/src/App.js"],"names":["React","Switch","Route","Redirect","Header","Homepage","SignInPage","SignUpPage","AboutUsPage","HowToUsePage","auth","createUserDocument","UserProvider","defaultProfileIcon","ProfileDisplayProvider","App","Component","constructor","unsubscribeFromAuth","state","currentUser","componentDidMount","signOut","onAuthStateChanged","userAuth","userRef","displayIcon","friendsList","blackList","activityStatus","value","activeDecks","onSnapshot","snapShot","setState","id","data","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport Header from './components/header/header.component';\nimport Homepage from './pages/homepage/homepage.component.jsx';\nimport SignInPage from './pages/sign-in-page/sign-in-page.component';\nimport SignUpPage from './pages/sign-up-page/sign-up-page.component';\nimport AboutUsPage from './pages/about-us-page/about-us-page.component';\nimport HowToUsePage from './pages/how-to-use-page/how-to-use-page.component.jsx';\nimport {auth, createUserDocument} from './firebase/firebase.utils';\nimport UserProvider from './providers/user/user.provider';\nimport defaultProfileIcon from './assets/default-profile-icon.png';\n\n\nimport './App.css';\nimport ProfileDisplayProvider from './providers/profile-display/profile-display.provider';\n\n//import Redirect -> is there an option that waits a duration before redirecting?\n\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {currentUser: null}\n  }\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    auth.signOut();\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserDocument(userAuth, {displayIcon: defaultProfileIcon, friendsList: [], blackList: [], activityStatus: {value: \"online\"}, activeDecks: []});\n        userRef.onSnapshot(snapShot => {this.setState({currentUser: {id: snapShot.id, ...snapShot.data()}})});\n      }\n\n      else\n        this.setState({currentUser: userAuth});\n    })\n  }\n\n\n  render() {\n    return <UserProvider>\n        <ProfileDisplayProvider>\n          <Header/>\n          <Switch>\n            <Route exact path=\"/\" component={Homepage}/>\n            <Route exact path=\"/signin\" render={() => this.state.currentUser ? (<Redirect to=\"/\"/>) : (<SignInPage/>)}/>\n            <Route exact path=\"/signup\" render={() => this.state.currentUser ? (<Redirect to=\"/getstarted\"/>) : (<SignUpPage/>)}/>\n            <Route exact path=\"/aboutus\" component={AboutUsPage}/>\n            <Route exact path=\"/howtouse\" render={() => !this.state.currentUser ? (<Redirect to=\"/signin\"/>) : (<HowToUsePage/>)}/>\n            <Route exact path=\"/getstarted\" component={HowToUsePage}/>\n          </Switch>\n        </ProfileDisplayProvider>\n      </UserProvider>\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}