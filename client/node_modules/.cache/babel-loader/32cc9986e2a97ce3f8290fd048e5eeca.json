{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stant\\\\Documents\\\\PortfolioProjects\\\\VentilatorDonationApp\\\\ventilator-donation\\\\client\\\\src\\\\components\\\\browse-friends\\\\browse-friends.component.jsx\";\nimport React, { useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ProfileTab from '../../components/profile-tab/profile-tab.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { UserContext } from '../../providers/user/user.provider';\nimport { fetchUserArray } from '../../firebase/firebase.utils';\nimport { BrowseFriendsContainer, TabBanner, DisplayContainer } from './browse-friends.styles';\n\nconst BrowseFriends = async ({\n  history\n}) => {\n  const {\n    currentUser: {\n      id,\n      friendsList\n    }\n  } = useContext(UserContext);\n  /*\r\n  Async functions by definition do not halt the exection of the script. If you want to halt your execution to wait for a value you have to use await, which is only available inside async functions.\r\n  async function getUserArray() {\r\n  const array = await fetchUserArray();\r\n  //... Do what you need with the array \r\n  return array;\r\n  }\r\n  async function main() {\r\n  const userArray = await getUserArray();\r\n  userArray.forEach(value => {\r\n  return console.log('value: ', value, 'displayName: ', value.displayName);\r\n  });\r\n  }\r\n  main();\r\n  */\n  // async function getUserArray() {\n  //    const returnedArray = await fetchUserArray();\n  //    return returnedArray; \n  // }\n  // //const userArray = [];\n  // const array = getUserArray();\n  // console.log(\"Array: \", array);\n  // const userArray = (async () =>  {await fetchUserArray().then((array) => {\n  //     return array;\n  //     //userArray.filter((item) => item.id !== id && !friendsList.find((friend) => item.id === friend.currentUser.id));\n  // })})()\n\n  const userArray = await fetchUserArray();\n  await console.log(userArray);\n  await userArray.then(async array => await array.forEach(value => {\n    return console.log(\"value: \", value, \"displayName: \", value.displayName);\n  }));\n  await console.log(userArray.then(array => array[0]));\n\n  const handleClick = async event => {\n    await history.push(`/profile/:userId/${userArray.then(array => userArray[event.id].id)}`);\n  }; //TODO design TabHeader --> TabBanner will be deleted once TabHeader is designed\n\n\n  return /*#__PURE__*/React.createElement(BrowseFriendsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(TabBanner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Browse Users\"), (await userArray.map((user, idx) => /*#__PURE__*/React.createElement(DisplayContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTab, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 63\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    id: idx,\n    onClick: handleClick,\n    isProfileStyles: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 88\n    }\n  }, \"View Profile\")))));\n};\n\nexport default withRouter(BrowseFriends);","map":{"version":3,"sources":["C:/Users/stant/Documents/PortfolioProjects/VentilatorDonationApp/ventilator-donation/client/src/components/browse-friends/browse-friends.component.jsx"],"names":["React","useContext","withRouter","ProfileTab","CustomButton","UserContext","fetchUserArray","BrowseFriendsContainer","TabBanner","DisplayContainer","BrowseFriends","history","currentUser","id","friendsList","userArray","console","log","then","array","forEach","value","displayName","handleClick","event","push","map","user","idx"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,UAAP,MAAuB,oDAAvB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,WAAR,QAA0B,oCAA1B;AACA,SAAQC,cAAR,QAA6B,+BAA7B;AACA,SAAQC,sBAAR,EAAgCC,SAAhC,EAA2CC,gBAA3C,QAAkE,yBAAlE;;AAEA,MAAMC,aAAa,GAAG,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAqB;AAIvC,QAAM;AAACC,IAAAA,WAAW,EAAE;AAACC,MAAAA,EAAD;AAAKC,MAAAA;AAAL;AAAd,MAAmCb,UAAU,CAACI,WAAD,CAAnD;AAEA;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,QAAMU,SAAS,GAAG,MAAMT,cAAc,EAAtC;AAEA,QAAMU,OAAO,CAACC,GAAR,CAAYF,SAAZ,CAAN;AACA,QAAMA,SAAS,CAACG,IAAV,CAAe,MAAOC,KAAP,IAAiB,MAAMA,KAAK,CAACC,OAAN,CAAeC,KAAD,IAAW;AAAC,WAAOL,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBI,KAAvB,EAA8B,eAA9B,EAA+CA,KAAK,CAACC,WAArD,CAAP;AAAyE,GAAnG,CAAtC,CAAN;AACA,QAAMN,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,IAAV,CAAgBC,KAAD,IAAWA,KAAK,CAAC,CAAD,CAA/B,CAAZ,CAAN;;AACA,QAAMI,WAAW,GAAG,MAAMC,KAAN,IAAe;AAChC,UAAOb,OAAO,CAACc,IAAR,CAAc,oBAAmBV,SAAS,CAACG,IAAV,CAAgBC,KAAD,IAAWJ,SAAS,CAACS,KAAK,CAACX,EAAP,CAAT,CAAoBA,EAA9C,CAAkD,EAAnF,CAAP;AACF,GAFD,CA/CuC,CAmDvC;;;AACA,sBAAO,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADG,GAEF,MAAME,SAAS,CAACW,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,kBAAe,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkB,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAED,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,eAA2C,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAEC,GAAlB;AAAuB,IAAA,OAAO,EAAEL,WAAhC;AAA6C,IAAA,eAAe,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA3C,CAA7B,CAFJ,EAAP;AAIH,CAxDD;;AA0DA,eAAerB,UAAU,CAACQ,aAAD,CAAzB","sourcesContent":["import React, {useContext} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport ProfileTab from '../../components/profile-tab/profile-tab.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport {UserContext} from '../../providers/user/user.provider';\r\nimport {fetchUserArray} from '../../firebase/firebase.utils';\r\nimport {BrowseFriendsContainer, TabBanner, DisplayContainer} from './browse-friends.styles';\r\n\r\nconst BrowseFriends = async ({history}) => {\r\n\r\n    \r\n\r\n    const {currentUser: {id, friendsList}} = useContext(UserContext);\r\n\r\n    /*\r\n    Async functions by definition do not halt the exection of the script. If you want to halt your execution to wait for a value you have to use await, which is only available inside async functions.\r\nasync function getUserArray() {\r\n  const array = await fetchUserArray();\r\n\r\n  //... Do what you need with the array \r\n\r\n  return array;\r\n}\r\n\r\nasync function main() {\r\n  const userArray = await getUserArray();\r\n  userArray.forEach(value => {\r\n    return console.log('value: ', value, 'displayName: ', value.displayName);\r\n  });\r\n}\r\n\r\nmain();\r\n    */\r\n\r\n    // async function getUserArray() {\r\n    //    const returnedArray = await fetchUserArray();\r\n    //    return returnedArray; \r\n    // }\r\n\r\n    \r\n    \r\n    // //const userArray = [];\r\n    // const array = getUserArray();\r\n    // console.log(\"Array: \", array);\r\n    \r\n    // const userArray = (async () =>  {await fetchUserArray().then((array) => {\r\n    //     return array;\r\n    //     //userArray.filter((item) => item.id !== id && !friendsList.find((friend) => item.id === friend.currentUser.id));\r\n    // })})()\r\n\r\n    const userArray = await fetchUserArray();\r\n    \r\n    await console.log(userArray);\r\n    await userArray.then(async (array) => await array.forEach((value) => {return console.log(\"value: \", value, \"displayName: \", value.displayName)}));\r\n    await console.log(userArray.then((array) => array[0]));\r\n    const handleClick = async event => {\r\n       await  history.push(`/profile/:userId/${userArray.then((array) => userArray[event.id].id)}`);\r\n    }\r\n   \r\n    //TODO design TabHeader --> TabBanner will be deleted once TabHeader is designed\r\n    return <BrowseFriendsContainer>\r\n        <TabBanner>Browse Users</TabBanner>\r\n        {await userArray.map((user, idx) => <DisplayContainer><ProfileTab user={user}/><CustomButton id={idx} onClick={handleClick} isProfileStyles>View Profile</CustomButton></DisplayContainer>)}\r\n    </BrowseFriendsContainer>\r\n}\r\n\r\nexport default withRouter(BrowseFriends);"]},"metadata":{},"sourceType":"module"}