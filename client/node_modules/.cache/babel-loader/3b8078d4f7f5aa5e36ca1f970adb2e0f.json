{"ast":null,"code":"var _jsxFileName = \"/Users/stanton.dobson/Documents/Portfolio_Projects/LangFlashApp/client/src/App.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport ReactSession from 'react-client-session';\nimport { auth, createUserDocument } from './firebase/firebase.utils';\nimport { UserContext } from './providers/user/user.provider';\nimport defaultProfileIcon from './assets/default-profile-icon.png';\nimport ProfileDisplayProvider from './providers/profile-display/profile-display.provider';\nimport ProfileProvider from './providers/profile/profile.provider.jsx';\nimport DeckProvider from './providers/deck/deck.provider.jsx';\nimport Header from './components/header/header.component';\nimport Homepage from './pages/homepage/homepage.component.jsx';\nimport SignInPage from './pages/sign-in-page/sign-in-page.component';\nimport SignUpPage from './pages/sign-up-page/sign-up-page.component';\nimport AboutUsPage from './pages/about-us-page/about-us-page.component';\nimport HowToUsePage from './pages/how-to-use-page/how-to-use-page.component.jsx';\nimport PersonalProfilePage from './pages/personal-profile-page/personal-profile-page.component';\nimport PublicProfilePage from './pages/public-profile-page/public-profile-page.component';\nimport BrowseFriendsPage from './pages/browse-friends-page/browse-friends-page.component';\nimport './App.css'; //import Redirect -> is there an option that waits a duration before redirecting?\n\nconst App = ({\n  match\n}) => {\n  const {\n    currentUser,\n    changeCurrentUser\n  } = useContext(UserContext);\n  useEffect(() => {\n    //auth.signOut();\n    auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserDocument(userAuth, {\n          displayIcon: defaultProfileIcon,\n          friendsList: [],\n          blackList: [],\n          activityStatus: {\n            value: \"online\"\n          },\n          activeDecks: []\n        });\n        await userRef.update({\n          activityStatus: \"online\"\n        });\n        userRef.onSnapshot(snapShot => {\n          changeCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      } else changeCurrentUser(userAuth);\n    });\n    ReactSession.set(\"user\", currentUser);\n  }, []);\n  return /*#__PURE__*/React.createElement(ProfileDisplayProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Homepage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 68\n      }\n    }) : /*#__PURE__*/React.createElement(SignInPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 91\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signup\",\n    render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/getstarted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 67\n      }\n    }) : /*#__PURE__*/React.createElement(SignUpPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 100\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/aboutus\",\n    component: AboutUsPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/howtouse\",\n    render: () => !currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 71\n      }\n    }) : /*#__PURE__*/React.createElement(HowToUsePage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 100\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/getstarted\",\n    component: HowToUsePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/browseusers\",\n    component: BrowseFriendsPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProfileProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DeckProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/profile\",\n    component: PersonalProfilePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/profile/:userId\",\n    component: PublicProfilePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/stanton.dobson/Documents/Portfolio_Projects/LangFlashApp/client/src/App.js"],"names":["React","useContext","useEffect","Switch","Route","Redirect","ReactSession","auth","createUserDocument","UserContext","defaultProfileIcon","ProfileDisplayProvider","ProfileProvider","DeckProvider","Header","Homepage","SignInPage","SignUpPage","AboutUsPage","HowToUsePage","PersonalProfilePage","PublicProfilePage","BrowseFriendsPage","App","match","currentUser","changeCurrentUser","onAuthStateChanged","userAuth","userRef","displayIcon","friendsList","blackList","activityStatus","value","activeDecks","update","onSnapshot","snapShot","id","data","set"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport ReactSession from 'react-client-session';\nimport {auth, createUserDocument} from './firebase/firebase.utils';\nimport {UserContext} from './providers/user/user.provider';\nimport defaultProfileIcon from './assets/default-profile-icon.png';\nimport ProfileDisplayProvider from './providers/profile-display/profile-display.provider';\nimport ProfileProvider from './providers/profile/profile.provider.jsx';\nimport DeckProvider from './providers/deck/deck.provider.jsx';\n\nimport Header from './components/header/header.component';\nimport Homepage from './pages/homepage/homepage.component.jsx';\nimport SignInPage from './pages/sign-in-page/sign-in-page.component';\nimport SignUpPage from './pages/sign-up-page/sign-up-page.component';\nimport AboutUsPage from './pages/about-us-page/about-us-page.component';\nimport HowToUsePage from './pages/how-to-use-page/how-to-use-page.component.jsx';\nimport PersonalProfilePage from './pages/personal-profile-page/personal-profile-page.component';\nimport PublicProfilePage from './pages/public-profile-page/public-profile-page.component';\nimport BrowseFriendsPage from './pages/browse-friends-page/browse-friends-page.component';\nimport './App.css';\n\n\n//import Redirect -> is there an option that waits a duration before redirecting?\n\n\n\nconst App = ({match}) => {\n  const {currentUser, changeCurrentUser} = useContext(UserContext);\n\n\n  useEffect(() => {\n    //auth.signOut();\n    auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserDocument(userAuth, {displayIcon: defaultProfileIcon, friendsList: [], blackList: [], activityStatus: {value: \"online\"}, activeDecks: []});\n        await userRef.update({activityStatus: \"online\"});\n        userRef.onSnapshot(snapShot => {changeCurrentUser({id: snapShot.id, ...snapShot.data()})});\n      }\n      else\n        changeCurrentUser(userAuth);\n    })\n    \n    ReactSession.set(\"user\", currentUser);\n  }, [])\n\n    \n  return <ProfileDisplayProvider>\n        <Header/>\n        <Switch>\n          <Route exact path=\"/\" component={Homepage}/>\n          <Route exact path=\"/signin\" render={() => currentUser ? (<Redirect to=\"/\"/>) : (<SignInPage/>)}/>\n          <Route exact path=\"/signup\" render={() => currentUser? (<Redirect to=\"/getstarted\"/>) : (<SignUpPage/>)}/>\n          <Route exact path=\"/aboutus\" component={AboutUsPage}/>\n          <Route exact path=\"/howtouse\" render={() => !currentUser ? (<Redirect to=\"/signin\"/>) : (<HowToUsePage/>)}/>\n          <Route exact path=\"/getstarted\" component={HowToUsePage}/>\n          <Route exact path=\"/browseusers\" component={BrowseFriendsPage}/>\n          <ProfileProvider>\n          <DeckProvider>\n            <Route exact path=\"/profile\" component={PersonalProfilePage} />\n            <Route path=\"/profile/:userId\" component={PublicProfilePage} />\n          </DeckProvider>\n          </ProfileProvider>\n        </Switch>\n      </ProfileDisplayProvider>\n      \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}