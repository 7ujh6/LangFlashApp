{"ast":null,"code":"var _jsxFileName = \"/Users/stanton.dobson/Documents/Portfolio_Projects/LangFlashApp/client/src/components/public-profile/public-profile.component.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { fetchReferenceObject } from '../../firebase/firebase.utils';\nimport { UserContext } from '../../providers/user/user.provider';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport Decks from '../../components/decks/decks.component';\nimport { withRouter } from 'react-router-dom';\nimport { PublicProfileContainer, ProfileContainer, ProfileIconContainer, DisplayNameContainer, ButtonsContainer, ActivityIcon, ProfileIcon } from './public-profile.styles'; // TODO fix this component to use localStorage or at least use a loading prop;\n//TODO something is wrong with this code.\n\nconst PublicProfile = ({\n  match\n}) => {\n  const {\n    userId\n  } = match.params;\n  const [profileData, setProfileData] = useState({\n    data: {\n      displayName: null,\n      displayIcon: null,\n      activityStatus: null,\n      activeDecks: []\n    }\n  });\n  useEffect(() => {\n    async function fetchProfileData() {\n      const fetchedProfileData = await fetchReferenceObject(`/users/${userId}`);\n      setProfileData(fetchedProfileData);\n    }\n\n    fetchProfileData();\n  }, []);\n  const {\n    displayName,\n    displayIcon,\n    activityStatus,\n    activeDecks\n  } = profileData.data;\n  const {\n    friendsList,\n    blackList,\n    addFriend,\n    removeFriend,\n    blockUser,\n    unblockUser\n  } = useContext(UserContext);\n  console.log(\"Consoling localStorage\", localStorage.getItem(\"user\"));\n  const [friendAdded, toggleFriendAdded] = useState(async () => await friendsList.find(friend => friend.uid === userId));\n  const [userBlocked, toggleUserBlocked] = useState(async () => await blackList.find(user => user.uid === userId));\n\n  const handleAddAction = event => {\n    try {\n      if (displayName) {\n        addFriend(profileData.data);\n        if (userBlocked) toggleUserBlocked();\n        toggleFriendAdded();\n      }\n    } catch {\n      alert(\"Error with adding user. Try again later\");\n    }\n  };\n\n  const handleRemoveAction = event => {\n    try {\n      if (displayName) {\n        removeFriend(profileData.data);\n        toggleFriendAdded();\n      }\n    } catch (error) {\n      alert(\"Error with unfriending user. Try again later\");\n    }\n  };\n\n  const handleBlockAction = event => {\n    try {\n      if (displayName) {\n        blockUser(profileData.data);\n        if (friendAdded) toggleFriendAdded();\n        toggleUserBlocked();\n      }\n    } catch (error) {\n      alert(\"Error with blocking user. Try again later.\");\n    }\n  };\n\n  const handleUnblockAction = event => {\n    try {\n      if (displayName) {\n        unblockUser(profileData.data);\n        toggleUserBlocked();\n      }\n    } catch (error) {\n      alert(\"Error with unblocking user. Try again later.\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(PublicProfileContainer, {\n    activityStatus: activityStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(ProfileContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProfileIconContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProfileIcon, {\n    alt: \"profile-icon\",\n    src: displayIcon,\n    height: \"100\",\n    width: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ActivityIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DisplayNameContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, displayName)), /*#__PURE__*/React.createElement(ButtonsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, !friendAdded ? /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleAddAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, \"Add Friend\") : /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleRemoveAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 97\n    }\n  }, \"Unfriend\"), !userBlocked ? /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleBlockAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \"Block User\") : /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: handleUnblockAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 99\n    }\n  }, \"Unblock User\"), /*#__PURE__*/React.createElement(CustomButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Chat\")), /*#__PURE__*/React.createElement(Decks, {\n    isPublicProfile: true,\n    activeDecks: activeDecks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default withRouter(PublicProfile);","map":{"version":3,"sources":["/Users/stanton.dobson/Documents/Portfolio_Projects/LangFlashApp/client/src/components/public-profile/public-profile.component.jsx"],"names":["React","useState","useContext","useEffect","fetchReferenceObject","UserContext","CustomButton","Decks","withRouter","PublicProfileContainer","ProfileContainer","ProfileIconContainer","DisplayNameContainer","ButtonsContainer","ActivityIcon","ProfileIcon","PublicProfile","match","userId","params","profileData","setProfileData","data","displayName","displayIcon","activityStatus","activeDecks","fetchProfileData","fetchedProfileData","friendsList","blackList","addFriend","removeFriend","blockUser","unblockUser","console","log","localStorage","getItem","friendAdded","toggleFriendAdded","find","friend","uid","userBlocked","toggleUserBlocked","user","handleAddAction","event","alert","handleRemoveAction","error","handleBlockAction","handleUnblockAction"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\nimport {fetchReferenceObject} from '../../firebase/firebase.utils';\nimport {UserContext} from '../../providers/user/user.provider';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport Decks from '../../components/decks/decks.component';\nimport {withRouter} from 'react-router-dom';\n\nimport {PublicProfileContainer, ProfileContainer, ProfileIconContainer, DisplayNameContainer, ButtonsContainer,\n     ActivityIcon, ProfileIcon} from './public-profile.styles';\n// TODO fix this component to use localStorage or at least use a loading prop;\n//TODO something is wrong with this code.\n\nconst PublicProfile = ({match}) => {\n    const {userId} = match.params;\n\n\n    const [profileData, setProfileData] = useState({\n        data: {displayName: null, displayIcon: null, activityStatus: null, activeDecks:[]}});\n        \n    useEffect(() => {\n        async function fetchProfileData() {\n           const fetchedProfileData = await fetchReferenceObject(`/users/${userId}`); \n           setProfileData(fetchedProfileData);\n        }\n\n        fetchProfileData();\n    }, [])\n\n\n\n    const {displayName, displayIcon, activityStatus, activeDecks} =  profileData.data;\n    const {friendsList, blackList, addFriend, removeFriend, blockUser, unblockUser} = useContext(UserContext);\n\n    console.log(\"Consoling localStorage\", localStorage.getItem(\"user\"));\n\n    const [friendAdded, toggleFriendAdded] = useState(async () => await friendsList.find((friend) => friend.uid === userId));\n    const [userBlocked, toggleUserBlocked] = useState(async () => await blackList.find((user) => user.uid === userId));\n\n    const handleAddAction = event => {\n        try {\n            if (displayName) {\n                addFriend(profileData.data);\n                if (userBlocked) toggleUserBlocked();\n                toggleFriendAdded();\n            }\n        } catch {\n            alert(\"Error with adding user. Try again later\");\n        }\n    }\n\n    const handleRemoveAction = event => {\n       try {\n            if (displayName) {\n                removeFriend(profileData.data);\n                toggleFriendAdded();\n            }\n        } catch (error) {\n            alert(\"Error with unfriending user. Try again later\");\n        } \n    }\n\n    const handleBlockAction = event => {\n        try {\n            if (displayName) {\n                blockUser(profileData.data);\n                if (friendAdded) toggleFriendAdded();\n                toggleUserBlocked();\n            } \n        } catch (error) {\n            alert(\"Error with blocking user. Try again later.\")\n        }\n    }\n\n    const handleUnblockAction = event => {\n        try {\n            if (displayName) {\n            unblockUser(profileData.data);\n            toggleUserBlocked();\n        }} catch (error) {\n            alert(\"Error with unblocking user. Try again later.\");\n        }\n    }\n\n\n    return <PublicProfileContainer activityStatus={activityStatus}>\n        <ProfileContainer>\n                <ProfileIconContainer>\n                    <ProfileIcon alt=\"profile-icon\" src={displayIcon} height=\"100\" width=\"100\"/>\n                </ProfileIconContainer>\n                <ActivityIcon/>\n            <DisplayNameContainer>{displayName}</DisplayNameContainer>\n        </ProfileContainer>\n        <ButtonsContainer>\n            {!friendAdded ? <CustomButton onClick={handleAddAction}>Add Friend</CustomButton> : <CustomButton onClick={handleRemoveAction}>Unfriend</CustomButton>}\n            {!userBlocked ? <CustomButton onClick={handleBlockAction}>Block User</CustomButton> : <CustomButton onClick={handleUnblockAction}>Unblock User</CustomButton>}\n            <CustomButton>Chat</CustomButton>\n        </ButtonsContainer>\n        \n        <Decks isPublicProfile activeDecks={activeDecks}/>\n    </PublicProfileContainer>\n}\n\n\nexport default withRouter(PublicProfile);"]},"metadata":{},"sourceType":"module"}