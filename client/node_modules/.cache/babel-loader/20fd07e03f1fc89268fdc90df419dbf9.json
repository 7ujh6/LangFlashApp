{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stant\\\\Documents\\\\PortfolioProjects\\\\VentilatorDonationApp\\\\ventilator-donation\\\\src\\\\providers\\\\user\\\\user.provider.jsx\";\nimport React, { createContext, useState } from 'react';\nimport { updateDisplayName, updateDisplayIcon, appendFriend, deleteFriend } from '../../firebase/firebase.utils';\nimport defaultProfileIcon from '../../assets/default-profile-icon.png';\nexport const UserContext = createContext({\n  id: null,\n  displayName: \"\",\n  displayIcon: null,\n  friendsList: [],\n  blackList: [],\n  activityStatus: \"offline\",\n  activeDecks: [],\n  //array of objects -> {name, language, [items]}; items-> {frontSide=\"\", backSide=\"\"}\n  changeDisplayName: () => {},\n  changeDisplayIcon: () => {},\n  addFriend: () => {},\n  deleteFriend: () => {},\n  blockFriend: () => {}\n});\n\nconst UserProvider = ({\n  children\n}) => {\n  const [displayName, setDisplayName] = useState(\"\");\n  const [displayIcon, setDisplayIcon] = useState(null);\n  const [friendsList, setFriendsList] = useState([]);\n  const [blackList, setBlackList] = useState([]);\n  const [activityStatus, setActivityStatus] = useState(\"offline\");\n\n  const changeDisplayName = name => {\n    setDisplayName(updateDisplayName(this.id, name)); //may be redundant to set the state if the state is just going to be refreshed by onSnapshot\n  };\n\n  const changeDisplayIcon = image => {\n    setDisplayIcon(updateDisplayIcon(this.id, image));\n  };\n\n  const addFriend = friend => {\n    setFriendsList(appendFriend(this.id, friendsList, friend));\n  };\n\n  const removeFriend = friend => {\n    setFriendsList(deleteFriend(this.id, friendsList, friend));\n  };\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      displayName,\n      displayIcon,\n      activityStatus,\n      friendsList,\n      changeDisplayName,\n      changeDisplayIcon,\n      addFriend,\n      removeFriend\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }\n  }, children);\n};\n\nexport default UserProvider;","map":{"version":3,"sources":["C:/Users/stant/Documents/PortfolioProjects/VentilatorDonationApp/ventilator-donation/src/providers/user/user.provider.jsx"],"names":["React","createContext","useState","updateDisplayName","updateDisplayIcon","appendFriend","deleteFriend","defaultProfileIcon","UserContext","id","displayName","displayIcon","friendsList","blackList","activityStatus","activeDecks","changeDisplayName","changeDisplayIcon","addFriend","blockFriend","UserProvider","children","setDisplayName","setDisplayIcon","setFriendsList","setBlackList","setActivityStatus","name","image","friend","removeFriend"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,QAA6C,OAA7C;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,EAA8CC,YAA9C,EAA4DC,YAA5D,QAA+E,+BAA/E;AACA,OAAOC,kBAAP,MAA+B,uCAA/B;AAEA,OAAO,MAAMC,WAAW,GAAGP,aAAa,CAAC;AACrCQ,EAAAA,EAAE,EAAE,IADiC;AAErCC,EAAAA,WAAW,EAAE,EAFwB;AAGrCC,EAAAA,WAAW,EAAE,IAHwB;AAIrCC,EAAAA,WAAW,EAAE,EAJwB;AAKrCC,EAAAA,SAAS,EAAE,EAL0B;AAMrCC,EAAAA,cAAc,EAAE,SANqB;AAOrCC,EAAAA,WAAW,EAAE,EAPwB;AAOpB;AACjBC,EAAAA,iBAAiB,EAAE,MAAM,CAAE,CARU;AASrCC,EAAAA,iBAAiB,EAAE,MAAM,CAAE,CATU;AAUrCC,EAAAA,SAAS,EAAE,MAAM,CAAE,CAVkB;AAWrCZ,EAAAA,YAAY,EAAE,MAAM,CAAE,CAXe;AAYrCa,EAAAA,WAAW,EAAE,MAAM,CAAE;AAZgB,CAAD,CAAjC;;AAgBP,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAEjC,QAAM,CAACX,WAAD,EAAcY,cAAd,IAAgCpB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,WAAD,EAAcY,cAAd,IAAgCrB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACU,WAAD,EAAcY,cAAd,IAAgCtB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,SAAD,EAAYY,YAAZ,IAA4BvB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,cAAD,EAAiBY,iBAAjB,IAAsCxB,QAAQ,CAAC,SAAD,CAApD;;AAEA,QAAMc,iBAAiB,GAAGW,IAAI,IAAI;AAC9BL,IAAAA,cAAc,CAACnB,iBAAiB,CAAC,KAAKM,EAAN,EAAUkB,IAAV,CAAlB,CAAd,CAD8B,CAE9B;AACH,GAHD;;AAKA,QAAMV,iBAAiB,GAAGW,KAAK,IAAI;AAC/BL,IAAAA,cAAc,CAACnB,iBAAiB,CAAC,KAAKK,EAAN,EAAUmB,KAAV,CAAlB,CAAd;AACH,GAFD;;AAIA,QAAMV,SAAS,GAAGW,MAAM,IAAI;AACxBL,IAAAA,cAAc,CAACnB,YAAY,CAAC,KAAKI,EAAN,EAAUG,WAAV,EAAuBiB,MAAvB,CAAb,CAAd;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAGD,MAAM,IAAI;AAC3BL,IAAAA,cAAc,CAAClB,YAAY,CAAC,KAAKG,EAAN,EAAUG,WAAV,EAAuBiB,MAAvB,CAAb,CAAd;AACH,GAFD;;AAIA,sBAAO,oBAAC,WAAD,CAAa,QAAb;AACP,IAAA,KAAK,EAAE;AAACnB,MAAAA,WAAD;AAAcC,MAAAA,WAAd;AAA2BG,MAAAA,cAA3B;AAA2CF,MAAAA,WAA3C;AAAwDI,MAAAA,iBAAxD;AAA2EC,MAAAA,iBAA3E;AAA8FC,MAAAA,SAA9F;AAAyGY,MAAAA;AAAzG,KADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACyHT,QADzH,CAAP;AAEH,CA3BD;;AA6BA,eAAeD,YAAf","sourcesContent":["import React, {createContext, useState} from 'react';\r\nimport {updateDisplayName, updateDisplayIcon, appendFriend, deleteFriend} from '../../firebase/firebase.utils';\r\nimport defaultProfileIcon from '../../assets/default-profile-icon.png';\r\n\r\nexport const UserContext = createContext({\r\n    id: null,\r\n    displayName: \"\",\r\n    displayIcon: null,\r\n    friendsList: [],\r\n    blackList: [],\r\n    activityStatus: \"offline\",\r\n    activeDecks: [], //array of objects -> {name, language, [items]}; items-> {frontSide=\"\", backSide=\"\"}\r\n    changeDisplayName: () => {},\r\n    changeDisplayIcon: () => {},\r\n    addFriend: () => {},\r\n    deleteFriend: () => {},\r\n    blockFriend: () => {},\r\n\r\n});\r\n\r\nconst UserProvider = ({children}) => {\r\n\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n    const [displayIcon, setDisplayIcon] = useState(null);\r\n    const [friendsList, setFriendsList] = useState([]);\r\n    const [blackList, setBlackList] = useState([]);\r\n    const [activityStatus, setActivityStatus] = useState(\"offline\");\r\n\r\n    const changeDisplayName = name => {\r\n        setDisplayName(updateDisplayName(this.id, name));\r\n        //may be redundant to set the state if the state is just going to be refreshed by onSnapshot\r\n    }\r\n\r\n    const changeDisplayIcon = image => {\r\n        setDisplayIcon(updateDisplayIcon(this.id, image));\r\n    }\r\n\r\n    const addFriend = friend => {\r\n        setFriendsList(appendFriend(this.id, friendsList, friend));\r\n    }\r\n\r\n    const removeFriend = friend => {\r\n        setFriendsList(deleteFriend(this.id, friendsList, friend));\r\n    }\r\n\r\n    return <UserContext.Provider\r\n    value={{displayName, displayIcon, activityStatus, friendsList, changeDisplayName, changeDisplayIcon, addFriend, removeFriend}}>{children}</UserContext.Provider>\r\n}\r\n\r\nexport default UserProvider;"]},"metadata":{},"sourceType":"module"}