{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stant\\\\Documents\\\\PortfolioProjects\\\\VentilatorDonationApp\\\\ventilator-donation\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { auth, createUserDocument } from '../../firebase/firebase.utils';\nimport defaultProfileIcon from '../../assets/default-profile-icon.png';\nimport FormInput from '../form-input/form-input.component';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { UserContext } from '../../providers/user/user.provider';\nimport faker from 'faker';\n\nconst SignUp = () => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n  const {\n    changeCurrentUser\n  } = useContext(UserContext);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    try {\n      const {\n        user\n      } = await auth.createUserWithEmailAndPassword(email, password);\n      const userRef = await createUserDocument(user, {\n        displayName: displayName,\n        displayIcon: defaultProfileIcon,\n        friendsList: [],\n        blackList: [],\n        activityStatus: {\n          value: \"online\"\n        },\n        activeDecks: []\n      });\n      changeCurrentUser((await userRef.get()).data());\n      setUserCredentials({\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const createFakeCredentials = async event => {\n    try {\n      const fakeName = faker.name.findName(),\n            fakeEmail = faker.internet.email(),\n            fakePassword = \"password\";\n      const {\n        user\n      } = await auth.createUserWithEmailAndPassword(fakeEmail, fakePassword);\n      const userRef = await createUserDocument(user, {\n        displayName: fakeName,\n        displayIcon: defaultProfileIcon,\n        friendsList: [],\n        blackList: [],\n        activityStatus: {\n          value: \"online\"\n        },\n        activeDecks: []\n      });\n      changeCurrentUser((await userRef.get()).data());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(SignUpContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(SignUpTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Sign up with email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    style: {\n      margin: \"60px 30px 30px 30px\"\n    },\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"SIGN UP\")), /*#__PURE__*/React.createElement(CustomButton, {\n    style: {\n      margin: \"30px\"\n    },\n    onClick: createFakeCredentials,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \" GUEST SIGNUP\"));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/stant/Documents/PortfolioProjects/VentilatorDonationApp/ventilator-donation/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","useContext","auth","createUserDocument","defaultProfileIcon","FormInput","SignUpContainer","SignUpTitle","CustomButton","UserContext","faker","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","changeCurrentUser","handleSubmit","event","preventDefault","alert","user","createUserWithEmailAndPassword","userRef","displayIcon","friendsList","blackList","activityStatus","value","activeDecks","get","data","error","console","log","handleChange","name","target","createFakeCredentials","fakeName","findName","fakeEmail","internet","fakePassword","margin"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\r\nimport {auth, createUserDocument} from '../../firebase/firebase.utils';\r\nimport defaultProfileIcon from '../../assets/default-profile-icon.png';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport {SignUpContainer, SignUpTitle} from './sign-up.styles';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport {UserContext} from '../../providers/user/user.provider';\r\nimport faker from 'faker';\r\n\r\n\r\nconst SignUp = () => {\r\n    const [userCredentials, setUserCredentials] = useState({displayName: \"\", email: \"\", password: \"\", confirmPassword: \"\"})\r\n    const {displayName, email, password, confirmPassword} = userCredentials;\r\n    const {changeCurrentUser} = useContext(UserContext);\r\n\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            alert(\"passwords don't match\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const {user} = await auth.createUserWithEmailAndPassword(email, password);\r\n            const userRef = await createUserDocument(user, {displayName: displayName, displayIcon: defaultProfileIcon, friendsList: [], blackList: [], activityStatus: {value: \"online\"}, activeDecks: []});\r\n            changeCurrentUser((await userRef.get()).data());\r\n            setUserCredentials({\r\n                displayName: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                confirmPassword: \"\"\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const {name, value} = event.target;\r\n\r\n        setUserCredentials({...userCredentials, [name]: value})\r\n    };\r\n\r\n    const createFakeCredentials = async event => {\r\n        \r\n        try {\r\n            const fakeName = faker.name.findName(), fakeEmail = faker.internet.email(),\r\n        fakePassword = \"password\";\r\n        const {user} = await auth.createUserWithEmailAndPassword(fakeEmail, fakePassword);\r\n        const userRef = await createUserDocument(user, {displayName: fakeName, displayIcon: defaultProfileIcon, friendsList: [], blackList: [], activityStatus: {value: \"online\"}, activeDecks: []});\r\n        changeCurrentUser((await userRef.get()).data());\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n\r\n    return <SignUpContainer>\r\n        <SignUpTitle>I do not have an account</SignUpTitle>\r\n        <span>Sign up with email and password</span>\r\n        <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n            <FormInput type=\"text\" name=\"displayName\" value={displayName} onChange={handleChange} label=\"Display Name\" required/>\r\n            <FormInput type=\"text\" name=\"email\" value={email} onChange={handleChange} label=\"Email\" required/>\r\n            <FormInput type=\"password\" name=\"password\" value={password} onChange={handleChange} label=\"Password\" required/>\r\n            <FormInput type=\"password\" name=\"confirmPassword\" value={confirmPassword} onChange={handleChange} label=\"Confirm Password\" required/>\r\n            <CustomButton style={{margin:\"60px 30px 30px 30px\"}} type=\"submit\">SIGN UP</CustomButton>\r\n        </form>\r\n        <CustomButton style={{margin: \"30px\"}} onClick={createFakeCredentials}> GUEST SIGNUP</CustomButton>\r\n    </SignUpContainer>\r\n    \r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}