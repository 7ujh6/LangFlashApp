{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stant\\\\Documents\\\\PortfolioProjects\\\\VentilatorDonationApp\\\\ventilator-donation\\\\client\\\\src\\\\components\\\\decks\\\\decks.component.jsx\";\nimport React, { useState, useContext } from 'react';\nimport Card from '../card/card.component';\nimport PopUpWindow from '../pop-up-window/pop-up-window.component';\nimport FormInput from '../form-input/form-input.component';\nimport DecksButton from '../decks-button/decks-button.component';\nimport CardButton from '../card-button/card-button.component';\nimport CardForm from '../card-form/card-form.component';\nimport { DeckContext } from '../../providers/deck/deck.provider';\nimport { DecksContainer, ScrollWindow, DeckCell, DisplayTagWithTooltip, HeaderButtonsContainer, CancelContainer, DeckDisplay } from './decks.styles';\n\nconst Decks = ({\n  activeDecks,\n  changeActiveDecks,\n  isUser\n}) => {\n  const {\n    visible,\n    toggleVisible\n  } = useContext(DeckContext);\n  const [selectedDeck, setSelectedDeck] = useState(null);\n  const [popUp, triggerPopUp] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [frontSide, flipSides] = useState(true);\n  const [cardSubmission, setCardSubmission] = useState({\n    frontText: \"\",\n    backText: \"\",\n    tempFront: \"\",\n    tempBack: \"\",\n    stepNumber: 0\n  });\n\n  const handleSearch = event => {\n    setSearchText(event.target.value); //I think the filtering should be handled with onSubmit --> The data that we have to filter through could be large\n    //and doing a filter on every keystroke is probably inefficient at best\n    //const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    //<CardList monsters = {filteredMonsters}/> \n  };\n\n  const handleSearchChange = event => {\n    const {\n      value\n    } = event.target;\n    setSearchText(value);\n  };\n\n  const handleFlip = () => {\n    flipSides(!frontSide);\n  };\n\n  const handlePopUpOpen = event => {\n    const {\n      id\n    } = event.currentTarget;\n    console.log(event.currentTarget);\n    console.log(\"I am being called\", \"ID: \", id);\n    setSelectedDeck({\n      index: id,\n      deck: activeDecks[id]\n    });\n    triggerPopUp(!popUp);\n  };\n\n  const handlePopUpClose = () => {\n    const {\n      index,\n      deck\n    } = selectedDeck;\n    let newActiveDecks = activeDecks;\n    newActiveDecks[index] = deck;\n    triggerPopUp(!popUp);\n    if (isUser) changeActiveDecks(newActiveDecks);\n    setSelectedDeck(null);\n  };\n\n  const handleSubmission = event => {\n    const {\n      id,\n      value\n    } = event.target;\n\n    switch (id) {\n      case 1:\n        setCardSubmission({\n          frontText: value\n        });\n        break;\n\n      case 2:\n        setCardSubmission({\n          backText: value\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    if (id === 2) {\n      const {\n        frontText,\n        backText\n      } = cardSubmission;\n      const {\n        index,\n        deck\n      } = selectedDeck;\n      setSelectedDeck({\n        index: index,\n        deck: [...deck, {\n          frontText,\n          backText\n        }]\n      });\n      setCardSubmission({ ...cardSubmission,\n        frontText: \"\",\n        backText: \"\",\n        tempFront: \"\",\n        tempBack: \"\"\n      });\n    }\n\n    setCardSubmission({\n      stepNumber: (cardSubmission.stepNumber + 1) % 3\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      id,\n      value\n    } = event.target;\n\n    switch (id) {\n      case 1:\n        setCardSubmission({\n          tempFront: value\n        });\n        break;\n\n      case 2:\n        setCardSubmission({\n          tempBack: value\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleDeckUpdate = event => {\n    const {\n      id,\n      name,\n      value\n    } = event.target;\n    let newActiveDecks = activeDecks;\n\n    if (!name) {\n      newActiveDecks.push({\n        deck: {\n          name: \"\",\n          description: \"\",\n          cards: []\n        }\n      });\n      changeActiveDecks(newActiveDecks);\n    } else {\n      const truncatedValue = value.substring(0, Math.min(value.length, 100));\n      newActiveDecks[id] = {\n        [name]: truncatedValue\n      };\n      changeActiveDecks(newActiveDecks);\n    }\n  };\n\n  const handleCancel = () => {\n    setCardSubmission({\n      frontText: \"\",\n      backText: \"\",\n      tempFront: \"\",\n      tempBack: \"\",\n      stepNumber: 0\n    });\n  };\n\n  const handleDeckDeletion = event => {\n    const {\n      index\n    } = event.currentTarget;\n    console.log(event.currentTarget, index);\n    changeActiveDecks(activeDecks.splice(index, 1));\n  };\n\n  const handleCardDeletion = event => {\n    const {\n      index\n    } = event.target;\n    setSelectedDeck({ ...selectedDeck,\n      deck: selectedDeck.deck.splice(index, 1)\n    });\n  };\n\n  const getCardElement = number => {\n    switch (number) {\n      case 0:\n        return /*#__PURE__*/React.createElement(CardButton, {\n          id: number,\n          onClick: handleSubmission,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 28\n          }\n        });\n\n      case 1:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CancelContainer, {\n          onClick: handleCancel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 30\n          }\n        }, \"\\uD835\\uDDEB\"), /*#__PURE__*/React.createElement(CardForm, {\n          id: number,\n          value: cardSubmission.tempFront,\n          onChange: handleChange,\n          onSubmit: handleSubmission,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 97\n          }\n        }));\n\n      case 2:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardForm, {\n          id: number,\n          value: cardSubmission.tempBack,\n          onChange: handleChange,\n          onSubmit: handleSubmission,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 30\n          }\n        }));\n\n      default:\n        break;\n    }\n  }; //TODO because the deck button is being rendered inside the deck cell which is \n  //tied to handlePopUpOpen the popUp is being opened while simultaneously \n  //appending a new deck\n\n\n  return /*#__PURE__*/React.createElement(DecksContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      left: \"20px\",\n      width: \"90px\",\n      height: \"55px\"\n    },\n    onClick: toggleVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DecksButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 114\n    }\n  })), visible ? /*#__PURE__*/React.createElement(ScrollWindow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    style: {\n      position: \"relative\",\n      left: \"20%\",\n      width: \"60%\"\n    },\n    type: \"search\",\n    placeholder: \"search\",\n    value: searchText,\n    onChange: handleSearchChange,\n    onSubmit: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }), popUp ? /*#__PURE__*/React.createElement(PopUpWindow, {\n    isCardPopUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(HeaderButtonsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: handlePopUpClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 70\n    }\n  }, \"\\uD835\\uDDEB\")), selectedDeck.deck.cards.map((card, idx) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    id: idx,\n    onClick: handleFlip,\n    card: card,\n    frontSide: frontSide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 74\n    }\n  }), /*#__PURE__*/React.createElement(CancelContainer, {\n    onClick: handleCardDeletion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 149\n    }\n  }, \"\\uD835\\uDDEB\"))), isUser ? getCardElement() : null) : null, /*#__PURE__*/React.createElement(DeckDisplay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, activeDecks.map((deck, idx) => /*#__PURE__*/React.createElement(DeckCell, {\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: idx,\n    style: {\n      cursor: \"pointer\",\n      position: \"relative\",\n      height: \"55px\",\n      width: \"95px\",\n      left: \"30px\"\n    },\n    onClick: handlePopUpOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(DecksButton, {\n    isAdd: true,\n    noPlus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(DisplayTagWithTooltip, {\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }, deck.name ? deck.name : `Deck ${idx}`, /*#__PURE__*/React.createElement(\"span\", {\n    name: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 37\n    }\n  }, deck.description ? deck.description : 'Add A Description')), /*#__PURE__*/React.createElement(CancelContainer, {\n    index: idx,\n    onClick: handleDeckDeletion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  }, \"\\uD835\\uDDEB\"))), isUser ? /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleDeckUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(DecksButton, {\n    isAdd: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 63\n    }\n  })) : null)) : null);\n};\n\nexport default Decks;","map":{"version":3,"sources":["C:/Users/stant/Documents/PortfolioProjects/VentilatorDonationApp/ventilator-donation/client/src/components/decks/decks.component.jsx"],"names":["React","useState","useContext","Card","PopUpWindow","FormInput","DecksButton","CardButton","CardForm","DeckContext","DecksContainer","ScrollWindow","DeckCell","DisplayTagWithTooltip","HeaderButtonsContainer","CancelContainer","DeckDisplay","Decks","activeDecks","changeActiveDecks","isUser","visible","toggleVisible","selectedDeck","setSelectedDeck","popUp","triggerPopUp","searchText","setSearchText","frontSide","flipSides","cardSubmission","setCardSubmission","frontText","backText","tempFront","tempBack","stepNumber","handleSearch","event","target","value","handleSearchChange","handleFlip","handlePopUpOpen","id","currentTarget","console","log","index","deck","handlePopUpClose","newActiveDecks","handleSubmission","handleChange","handleDeckUpdate","name","push","description","cards","truncatedValue","substring","Math","min","length","handleCancel","handleDeckDeletion","splice","handleCardDeletion","getCardElement","number","position","left","width","height","map","card","idx","cursor"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react'\r\nimport Card from '../card/card.component';\r\nimport PopUpWindow from '../pop-up-window/pop-up-window.component';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport DecksButton from '../decks-button/decks-button.component';\r\nimport CardButton from '../card-button/card-button.component';\r\nimport CardForm from '../card-form/card-form.component';\r\nimport {DeckContext} from '../../providers/deck/deck.provider';\r\nimport {DecksContainer, ScrollWindow, DeckCell, DisplayTagWithTooltip,\r\n     HeaderButtonsContainer, CancelContainer, DeckDisplay} from './decks.styles';\r\n\r\nconst Decks = ({activeDecks, changeActiveDecks, isUser}) => {\r\n\r\n    const {visible, toggleVisible} = useContext(DeckContext);\r\n    const [selectedDeck, setSelectedDeck] = useState(null);\r\n    const [popUp, triggerPopUp] = useState(false);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [frontSide, flipSides] = useState(true);\r\n    const [cardSubmission, setCardSubmission] = useState({frontText: \"\", backText: \"\", tempFront: \"\",\r\n         tempBack: \"\", stepNumber: 0})\r\n\r\n    const handleSearch = event => {\r\n        setSearchText(event.target.value);\r\n\r\n        //I think the filtering should be handled with onSubmit --> The data that we have to filter through could be large\r\n        //and doing a filter on every keystroke is probably inefficient at best\r\n\r\n        //const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\r\n        //<CardList monsters = {filteredMonsters}/> \r\n    }\r\n\r\n    const handleSearchChange = event => {\r\n        const {value} = event.target;\r\n        setSearchText(value)\r\n    }\r\n\r\n    const handleFlip = () => {\r\n        flipSides(!frontSide);\r\n    }\r\n\r\n    const handlePopUpOpen = event => {\r\n        const {id} = event.currentTarget;\r\n        console.log(event.currentTarget);\r\n        console.log(\"I am being called\", \"ID: \", id);\r\n        setSelectedDeck({index: id, deck: activeDecks[id]});\r\n        triggerPopUp(!popUp);\r\n    }\r\n\r\n    const handlePopUpClose = () => {\r\n        const {index, deck} = selectedDeck;\r\n        let newActiveDecks = activeDecks;\r\n        newActiveDecks[index] = deck;\r\n\r\n        triggerPopUp(!popUp);\r\n        if(isUser) changeActiveDecks(newActiveDecks);\r\n        setSelectedDeck(null);\r\n    }\r\n    \r\n    const handleSubmission = event => {\r\n        const {id, value} = event.target;\r\n        switch(id) {\r\n            case 1: setCardSubmission({frontText: value})\r\n                break;\r\n            case 2: setCardSubmission({backText: value})\r\n                break;\r\n            default: \r\n                break;\r\n        }\r\n\r\n        if (id === 2) {\r\n            const {frontText, backText} = cardSubmission;\r\n            const {index, deck} = selectedDeck;\r\n\r\n            setSelectedDeck({index: index, deck: [...deck, {frontText, backText}]})\r\n            setCardSubmission({...cardSubmission, frontText: \"\", backText: \"\", tempFront: \"\", tempBack:\"\"})\r\n        }\r\n\r\n        setCardSubmission({stepNumber: (cardSubmission.stepNumber + 1) % 3 })\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const {id, value} = event.target;\r\n        switch(id) {\r\n            case 1: setCardSubmission({tempFront: value})\r\n                break;\r\n            case 2: setCardSubmission({tempBack: value})\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleDeckUpdate = event => {\r\n       const {id, name, value} = event.target;\r\n       let newActiveDecks = activeDecks;\r\n\r\n       if(!name) {\r\n        newActiveDecks.push({deck: {name: \"\", description: \"\", cards: []}});\r\n        changeActiveDecks(newActiveDecks); \r\n    } \r\n       else {\r\n            const truncatedValue = value.substring(0, Math.min(value.length, 100));\r\n            newActiveDecks[id] = {[name] : truncatedValue};\r\n            changeActiveDecks(newActiveDecks);\r\n        }          \r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setCardSubmission({frontText: \"\", backText: \"\", tempFront: \"\",\r\n         tempBack: \"\", stepNumber: 0})\r\n    }\r\n    \r\n    const handleDeckDeletion = event => {\r\n        const {index} = event.currentTarget;\r\n        console.log(event.currentTarget, index);\r\n        changeActiveDecks(activeDecks.splice(index, 1));\r\n        \r\n    }\r\n\r\n    const handleCardDeletion = event => {\r\n        const {index} = event.target;\r\n        setSelectedDeck({...selectedDeck, deck: selectedDeck.deck.splice(index, 1)});\r\n    }\r\n\r\n    const getCardElement = number => {\r\n        switch (number) {\r\n\r\n            case 0: return <CardButton id={number} onClick={handleSubmission}/>\r\n            case 1: return <><CancelContainer onClick={handleCancel}>&#120299;</CancelContainer><CardForm id={number} value={cardSubmission.tempFront}\r\n                onChange={handleChange} onSubmit={handleSubmission}/></>\r\n            case 2: return <><CardForm id={number} value={cardSubmission.tempBack}\r\n                onChange={handleChange} onSubmit={handleSubmission}/></>\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //TODO because the deck button is being rendered inside the deck cell which is \r\n    //tied to handlePopUpOpen the popUp is being opened while simultaneously \r\n    //appending a new deck\r\n    \r\n    return <DecksContainer>\r\n        <div style={{position: \"absolute\", left: \"20px\", width: \"90px\", height: \"55px\"}} onClick={toggleVisible}><DecksButton/></div>\r\n        {\r\n            visible ? <ScrollWindow>\r\n                <FormInput style={{position: \"relative\", left:\"20%\", width: \"60%\"}} type='search' placeholder=\"search\" value={searchText} onChange={handleSearchChange} onSubmit={null}/> \r\n                {\r\n                    popUp ? \r\n\r\n                    <PopUpWindow isCardPopUp><HeaderButtonsContainer><span onClick={handlePopUpClose}>&#120299;</span></HeaderButtonsContainer>\r\n                        {\r\n                            selectedDeck.deck.cards.map((card, idx) => <><Card id={idx} onClick={handleFlip} card = {card} frontSide = {frontSide}/><CancelContainer onClick={handleCardDeletion}>&#120299;</CancelContainer></>)\r\n                        }\r\n\r\n                        {\r\n                                isUser ? getCardElement() : null\r\n                        }\r\n                    \r\n                    </PopUpWindow>\r\n                    : null\r\n                }\r\n\r\n                <DeckDisplay>\r\n                    {\r\n                        activeDecks.map((deck, idx) => <DeckCell key={idx}>\r\n                                <div id={idx} style={{cursor:\"pointer\", position: \"relative\", height: \"55px\", width: \"95px\", left: \"30px\"}} onClick={handlePopUpOpen}>\r\n                                <DecksButton isAdd={true} noPlus={true}/>\r\n                                </div>\r\n                                <DisplayTagWithTooltip name=\"name\">\r\n                                    {deck.name ? deck.name : `Deck ${idx}`}\r\n                                    <span name=\"description\">{deck.description ? deck.description : 'Add A Description'}</span>\r\n                                </DisplayTagWithTooltip>\r\n                                <CancelContainer index={idx} onClick={handleDeckDeletion}>&#120299;</CancelContainer>\r\n                            </DeckCell>\r\n                        )}\r\n                    {isUser ? <div onClick={handleDeckUpdate}><DecksButton  isAdd={true} /></div> : null}\r\n                </DeckDisplay>\r\n            </ScrollWindow> \r\n            : null\r\n        }\r\n    </DecksContainer>\r\n}\r\n\r\nexport default Decks;"]},"metadata":{},"sourceType":"module"}